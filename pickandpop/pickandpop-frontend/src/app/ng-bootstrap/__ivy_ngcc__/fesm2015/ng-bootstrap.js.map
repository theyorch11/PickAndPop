{"version":3,"file":"ng-bootstrap.js","sources":["ng:/@ng-bootstrap/ng-bootstrap/util/util.ts","ng:/@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","ng:/@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","ng:/@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","ng:/@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","ng:/@ng-bootstrap/ng-bootstrap/alert/alert.ts","ng:/@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","ng:/@ng-bootstrap/ng-bootstrap/buttons/label.ts","ng:/@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","ng:/@ng-bootstrap/ng-bootstrap/buttons/radio.ts","ng:/@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","ng:/@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","ng:/@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","ng:/@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","ng:/@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","ng:/@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","ng:/@ng-bootstrap/ng-bootstrap/util/key.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keyboard-service.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","ng:/@ng-bootstrap/ng-bootstrap/util/autoclose.ts","ng:/@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","ng:/@ng-bootstrap/ng-bootstrap/util/positioning.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input-config.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/jalali/jalali.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/jalali/ngb-calendar-persian.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hebrew/hebrew.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hebrew/ngb-calendar-hebrew.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hebrew/datepicker-i18n-hebrew.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-utc-adapter.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","ng:/@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","ng:/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","ng:/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-config.ts","ng:/@ng-bootstrap/ng-bootstrap/util/popup.ts","ng:/@ng-bootstrap/ng-bootstrap/util/scrollbar.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","ng:/@ng-bootstrap/ng-bootstrap/nav/nav-config.ts","ng:/@ng-bootstrap/ng-bootstrap/nav/nav.ts","ng:/@ng-bootstrap/ng-bootstrap/nav/nav-outlet.ts","ng:/@ng-bootstrap/ng-bootstrap/nav/nav.module.ts","ng:/@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","ng:/@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","ng:/@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","ng:/@ng-bootstrap/ng-bootstrap/util/triggers.ts","ng:/@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","ng:/@ng-bootstrap/ng-bootstrap/popover/popover.ts","ng:/@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","ng:/@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","ng:/@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","ng:/@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","ng:/@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","ng:/@ng-bootstrap/ng-bootstrap/rating/rating.ts","ng:/@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","ng:/@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","ng:/@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","ng:/@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker-i18n.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","ng:/@ng-bootstrap/ng-bootstrap/toast/toast-config.ts","ng:/@ng-bootstrap/ng-bootstrap/toast/toast.ts","ng:/@ng-bootstrap/ng-bootstrap/toast/toast.module.ts","ng:/@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","ng:/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","ng:/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","ng:/@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","ng:/@ng-bootstrap/ng-bootstrap/index.ts"],"names":["nextId","NGB_DATEPICKER_VALUE_ACCESSOR","mod","GREGORIAN_EPOCH","isGregorianLeapYear","fromGregorian","toGregorian"],"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","sourcesContent":["export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nexport function hasClassName(element: any, className: string): boolean {\n  return element && element.className && element.className.split &&\n      element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n  // Polyfill for ie10+\n\n  if (!Element.prototype.matches) {\n    // IE uses the non-standard name: msMatchesSelector\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  Element.prototype.closest = function(s: string) {\n    let el = this;\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n\nexport function closest(element: HTMLElement, selector): HTMLElement {\n  if (!selector) {\n    return null;\n  }\n\n  return element.closest(selector);\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet nextId = 0;\n\n/**\n * The context for the [NgbPanelHeader](#/components/accordion/api#NgbPanelHeader) template\n *\n * @since 4.1.0\n */\nexport interface NgbPanelHeaderContext {\n  /**\n   * `True` if current panel is opened\n   */\n  opened: boolean;\n}\n\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPanelHeader]'})\nexport class NgbPanelHeader {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps the accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  If `true`, the panel is disabled an can't be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel that must be unique on the page.\n   *\n   *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  isOpen = false;\n\n  /**\n   *  The panel title.\n   *\n   *  You can alternatively use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to set panel title.\n   */\n  @Input() title: string;\n\n  /**\n   * Type of the current panel.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * An optional class applied to the accordion card element that wraps both panel title and content.\n   *\n   * @since 5.3.0\n   */\n  @Input() cardClass: string;\n\n  titleTpl: NgbPanelTitle | null;\n  headerTpl: NgbPanelHeader | null;\n  contentTpl: NgbPanelContent | null;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelHeader, {descendants: false}) headerTpls: QueryList<NgbPanelHeader>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.headerTpl = this.headerTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * An event emitted right before toggling an accordion panel.\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * The id of the accordion panel that is being toggled.\n   */\n  panelId: string;\n\n  /**\n   * The next state of the panel.\n   *\n   * `true` if it will be opened, `false` if closed.\n   */\n  nextState: boolean;\n\n  /**\n   * Calling this function will prevent panel toggling.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  encapsulation: ViewEncapsulation.None,\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"btn btn-link\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div [class]=\"'card ' + (panel.cardClass || '')\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel ids that should be opened **initially**.\n   *\n   * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n   * the `(panelChange)` event.\n   */\n  @Input() activeIds: string | readonly string[] = [];\n\n  /**\n   *  If `true`, only one panel could be opened at a time.\n   *\n   *  Opening a new panel will close others.\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * Type of panels.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * Event emitted right before the panel toggle happens.\n   *\n   * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  constructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\n\n  /**\n   * Expands a panel with a given id.\n   *\n   * Has no effect if the panel is already expanded or disabled.\n   */\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\n\n  /**\n   * Expands all panels, if `[closeOthers]` is `false`.\n   *\n   * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n   */\n  expandAll(): void {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n\n  /**\n   * Collapses a panel with the given id.\n   *\n   * Has no effect if the panel is already collapsed or disabled.\n   */\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\n\n  /**\n   * Collapses all opened panels.\n   */\n  collapseAll() {\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n  }\n\n  /**\n   * Toggles a panel with the given id.\n   *\n   * Has no effect if the panel is disabled.\n   */\n  toggle(panelId: string) {\n    const panel = this._findPanelById(panelId);\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n\n  private _changeOpenState(panel: NgbPanel, nextState: boolean) {\n    if (panel && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n\n  private _closeOthers(panelId: string) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId) {\n        panel.isOpen = false;\n      }\n    });\n  }\n\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId); }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n}\n\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\n@Directive({\n  selector: 'button[ngbPanelToggle]',\n  host: {\n    'type': 'button',\n    '[disabled]': 'panel.disabled',\n    '[class.collapsed]': '!panel.isOpen',\n    '[attr.aria-expanded]': 'panel.isOpen',\n    '[attr.aria-controls]': 'panel.id',\n    '(click)': 'accordion.toggle(panel.id)'\n  }\n})\nexport class NgbPanelToggle {\n  @Input()\n  set ngbPanelToggle(panel: NgbPanel) {\n    if (panel) {\n      this.panel = panel;\n    }\n  }\n\n  constructor(public accordion: NgbAccordion, @Optional() @Host() public panel: NgbPanel) {}\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle} from './accordion';\n\nexport {\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent,\n  NgbPanelChangeEvent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelToggle\n} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES =\n    [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n@Component({\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible'},\n  template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    `,\n  styleUrls: ['./alert.scss']\n})\nexport class NgbAlert implements OnInit,\n    OnChanges {\n  /**\n   * If `true`, alert can be dismissed by the user.\n   *\n   * The close button (Ã) will be displayed and you can be notified\n   * of the event with the `(close)` output.\n   */\n  @Input() dismissible: boolean;\n  /**\n   * Type of the alert.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n  /**\n   * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n   */\n  @Output() close = new EventEmitter<void>();\n\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  closeHandler() { this.close.emit(null); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange = changes['type'];\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {ChangeDetectorRef, Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  checked;\n\n  /**\n   * If `true`, the checkbox button will be disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * The form control value when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * The form control value when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel, private _cd: ChangeDetectorRef) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    this._cd.markForCheck();\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'radiogroup'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * Name of the radio group applied to radio input elements.\n   *\n   * Will be applied to all radio input elements inside the group,\n   * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n   *\n   * If not provided, will be generated in the `ngb-radio-xx` format.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The value for the 'name' property of the input element.\n   *\n   * All inputs of the radio group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * The form control value when current radio button is checked.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * If `true`, current radio button will be disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>, private _cd: ChangeDetectorRef) {\n    this._group.register(this);\n    this.updateDisabled();\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    if (this.value !== value) {\n      this._cd.markForCheck();\n    }\n\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NgbCarouselConfig} from './carousel-config';\n\nimport {BehaviorSubject, combineLatest, NEVER, Subject, timer} from 'rxjs';\nimport {distinctUntilChanged, map, startWith, switchMap, takeUntil} from 'rxjs/operators';\n\nlet nextId = 0;\n\n/**\n * A directive that wraps the individual carousel slide.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Slide id that must be unique for the entire document.\n   *\n   * If not provided, will be generated in the `ngb-slide-xx` format.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(keydown.arrowLeft)': 'keyboard && prev(NgbSlideEventSource.ARROW_LEFT)',\n    '(keydown.arrowRight)': 'keyboard && next(NgbSlideEventSource.ARROW_RIGHT)'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id, NgbSlideEventSource.INDICATOR)\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev(NgbSlideEventSource.ARROW_LEFT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next(NgbSlideEventSource.ARROW_RIGHT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    AfterContentInit, OnDestroy {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n  public NgbSlideEventSource = NgbSlideEventSource;\n\n  private _destroy$ = new Subject<void>();\n  private _interval$ = new BehaviorSubject(0);\n  private _mouseHover$ = new BehaviorSubject(false);\n  private _pauseOnHover$ = new BehaviorSubject(false);\n  private _pause$ = new BehaviorSubject(false);\n  private _wrap$ = new BehaviorSubject(false);\n\n  /**\n   * The slide id that should be displayed **initially**.\n   *\n   * For subsequent interactions use methods `select()`, `next()`, etc. and the `(slide)` output.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n  @Input()\n  set interval(value: number) {\n    this._interval$.next(value);\n  }\n\n  get interval() { return this._interval$.value; }\n\n  /**\n   * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n   */\n  @Input()\n  set wrap(value: boolean) {\n    this._wrap$.next(value);\n  }\n\n  get wrap() { return this._wrap$.value; }\n\n  /**\n   * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * If `true`, will pause slide switching when mouse cursor hovers the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input()\n  set pauseOnHover(value: boolean) {\n    this._pauseOnHover$.next(value);\n  }\n\n  get pauseOnHover() { return this._pauseOnHover$.value; }\n\n  /**\n   * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * If `true`, navigation indicators at the bottom of the slide will be visible.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * An event emitted right after the slide transition is completed.\n   *\n   * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  constructor(\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\n      private _cd: ChangeDetectorRef) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  @HostListener('mouseenter')\n  mouseEnter() {\n    this._mouseHover$.next(true);\n  }\n\n  @HostListener('mouseleave')\n  mouseLeave() {\n    this._mouseHover$.next(false);\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        const hasNextSlide$ = combineLatest(\n                                  this.slide.pipe(map(slideEvent => slideEvent.current), startWith(this.activeId)),\n                                  this._wrap$, this.slides.changes.pipe(startWith(null)))\n                                  .pipe(\n                                      map(([currentSlideId, wrap]) => {\n                                        const slideArr = this.slides.toArray();\n                                        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n                                        return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                                      }),\n                                      distinctUntilChanged());\n        combineLatest(this._pause$, this._pauseOnHover$, this._mouseHover$, this._interval$, hasNextSlide$)\n            .pipe(\n                map(([pause, pauseOnHover, mouseHover, interval, hasNextSlide]) =>\n                        ((pause || (pauseOnHover && mouseHover) || !hasNextSlide) ? 0 : interval)),\n\n                distinctUntilChanged(), switchMap(interval => interval > 0 ? timer(interval, interval) : NEVER),\n                takeUntil(this._destroy$))\n            .subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n      });\n    }\n\n    this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => this._cd.markForCheck());\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n\n  ngOnDestroy() { this._destroy$.next(); }\n\n  /**\n   * Navigates to a slide with the specified identifier.\n   */\n  select(slideId: string, source?: NgbSlideEventSource) {\n    this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n  }\n\n  /**\n   * Navigates to the previous slide.\n   */\n  prev(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n  }\n\n  /**\n   * Navigates to the next slide.\n   */\n  next(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n  }\n\n  /**\n   * Pauses cycling through the slides.\n   */\n  pause() { this._pause$.next(true); }\n\n  /**\n   * Restarts cycling through the slides from left to right.\n   */\n  cycle() { this._pause$.next(false); }\n\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection, source?: NgbSlideEventSource) {\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this.slide.emit(\n          {prev: this.activeId, current: selectedSlide.id, direction: direction, paused: this._pause$.value, source});\n      this.activeId = selectedSlide.id;\n    }\n\n    // we get here after the interval fires or any external API call like next(), prev() or select()\n    this._cd.markForCheck();\n  }\n\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  private _getSlideById(slideId: string): NgbSlide { return this.slides.find(slide => slide.id === slideId); }\n\n  private _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n}\n\n/**\n * A slide change event emitted right after the slide transition is completed.\n */\nexport interface NgbSlideEvent {\n  /**\n   * The previous slide id.\n   */\n  prev: string;\n\n  /**\n   * The current slide id.\n   */\n  current: string;\n\n  /**\n   * The slide event direction.\n   *\n   * Possible values are `'left' | 'right'`.\n   */\n  direction: NgbSlideEventDirection;\n\n  /**\n   * Whether the pause() method was called (and no cycle() call was done afterwards).\n   *\n   * @since 5.1.0\n   */\n  paused: boolean;\n\n  /**\n   * Source triggering the slide change event.\n   *\n   * Possible values are `'timer' | 'arrowLeft' | 'arrowRight' | 'indicator'`\n   *\n   * @since 5.1.0\n   */\n  source?: NgbSlideEventSource;\n}\n\n/**\n * Defines the carousel slide transition direction.\n */\nexport enum NgbSlideEventDirection {\n  LEFT = <any>'left',\n  RIGHT = <any>'right'\n}\n\nexport enum NgbSlideEventSource {\n  TIMER = 'timer',\n  ARROW_LEFT = 'arrowLeft',\n  ARROW_RIGHT = 'arrowRight',\n  INDICATOR = 'indicator'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent, NgbSlideEventDirection, NgbSlideEventSource} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n}\n","import {Directive, Input} from '@angular/core';\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\n@Directive({\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n})\nexport class NgbCollapse {\n  /**\n   * If `true`, will collapse the element or show it otherwise.\n   */\n  @Input('ngbCollapse') collapsed = false;\n}\n","import {NgModule} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n}\n","import {NgbDateStruct} from './ngb-date-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n  /**\n   * The year, for example 2016\n   */\n  year: number;\n\n  /**\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n   */\n  month: number;\n\n  /**\n   * The day of month, starting with 1\n   */\n  day: number;\n\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n  static from(date: NgbDateStruct): NgbDate {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year: number, month: number, day: number) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n\n  /**\n   * Checks if the current date is equal to another date.\n   */\n  equals(other: NgbDateStruct): boolean {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  /**\n   * Checks if the current date is before another date.\n   */\n  before(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  /**\n   * Checks if the current date is after another date.\n   */\n  after(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nexport function fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nexport function toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\nexport abstract class NgbCalendar {\n  /**\n   * Returns the number of days per week.\n   */\n  abstract getDaysPerWeek(): number;\n\n  /**\n   * Returns an array of months per year.\n   *\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n   */\n  abstract getMonths(year?: number): number[];\n\n  /**\n   * Returns the number of weeks per month.\n   */\n  abstract getWeeksPerMonth(): number;\n\n  /**\n   * Returns the weekday number for a given day.\n   *\n   * With the default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekday(date: NgbDate): number;\n\n  /**\n   * Adds a number of years, months or days to a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Subtracts a number of years, months or days from a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Returns the week number for a given week.\n   */\n  abstract getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number): number;\n\n  /**\n   * Returns the today's date.\n   */\n  abstract getToday(): NgbDate;\n\n  /**\n   * Checks if a date is valid in the current calendar.\n   */\n  abstract isValid(date: NgbDate): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n    let checkMonth = true;\n    let expectedMonth = jsDate.getMonth();\n\n    switch (period) {\n      case 'y':\n        jsDate.setFullYear(jsDate.getFullYear() + number);\n        break;\n      case 'm':\n        expectedMonth += number;\n        jsDate.setMonth(expectedMonth);\n        expectedMonth = expectedMonth % 12;\n        if (expectedMonth < 0) {\n          expectedMonth = expectedMonth + 12;\n        }\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        checkMonth = false;\n        break;\n      default:\n        return date;\n    }\n\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n      // this means the destination month has less days than the initial month\n      // let's go back to the end of the previous month:\n      jsDate.setDate(0);\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    // year 0 doesn't exist in Gregorian calendar\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {isDefined} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function isChangedMonth(prev: NgbDate, next: NgbDate) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    !isDefined(date) ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n\n  const length = end - start + 1;\n  const numbers = Array(length);\n  for (let i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n\n  return numbers;\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\n  const nextDate = Object.assign(calendar.getNext(date, 'm'), {day: 1});\n  return maxDate && nextDate.after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\n  const prevDate = Object.assign(calendar.getPrev(date, 'm'), {day: 1});\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                     prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = Object.assign(calendar.getNext(date, 'm', i), {day: 1});\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n  const calendarToday = calendar.getToday();\n\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // today\n      let today = newDate.equals(calendarToday);\n\n      // adding user-provided data to the context\n      let contextUserData =\n          dayTemplateData ? dayTemplateData(newDate, {month: month.number, year: month.year}) : undefined;\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year, disabled,\n        focused: false,\n        selected: false, today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthShortName(month: number, year?: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthFullName(month: number, year?: number): string;\n\n  /**\n   * Returns the value of the `aria-label` attribute for a specific date.\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell.\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\n\n  /**\n   * Returns the textual representation of a week number rendered by datepicker.\n   *\n   * @since 3.0.0\n   */\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\n\n  /**\n   * Returns the textual representation of a year that is rendered in the datepicker year select box.\n   *\n   * @since 3.0.0\n   */\n  getYearNumerals(year: number): string { return `${year}`; }\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n}\n","import {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isChangedMonth,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport interface DatepickerServiceInputs extends\n    Partial<Pick<DatepickerViewModel, 'dayTemplateData' | 'displayMonths' | 'disabled' | 'firstDayOfWeek' |\n                     'focusVisible' | 'markDisabled' | 'maxDate' | 'minDate' | 'navigation' | 'outsideDays'>> {}\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _VALIDATORS:\n      {[K in keyof DatepickerServiceInputs]: (v: DatepickerServiceInputs[K]) => Partial<DatepickerViewModel>} = {\n        dayTemplateData: (dayTemplateData: NgbDayTemplateData) => {\n          if (this._state.dayTemplateData !== dayTemplateData) {\n            return {dayTemplateData};\n          }\n        },\n        displayMonths: (displayMonths: number) => {\n          displayMonths = toInteger(displayMonths);\n          if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n            return {displayMonths};\n          }\n        },\n        disabled: (disabled: boolean) => {\n          if (this._state.disabled !== disabled) {\n            return {disabled};\n          }\n        },\n        firstDayOfWeek: (firstDayOfWeek: number) => {\n          firstDayOfWeek = toInteger(firstDayOfWeek);\n          if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n            return {firstDayOfWeek};\n          }\n        },\n        focusVisible: (focusVisible: boolean) => {\n          if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n            return {focusVisible};\n          }\n        },\n        markDisabled: (markDisabled: NgbMarkDisabled) => {\n          if (this._state.markDisabled !== markDisabled) {\n            return {markDisabled};\n          }\n        },\n        maxDate: (date: NgbDate) => {\n          const maxDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.maxDate, maxDate)) {\n            return {maxDate};\n          }\n        },\n        minDate: (date: NgbDate) => {\n          const minDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.minDate, minDate)) {\n            return {minDate};\n          }\n        },\n        navigation: (navigation: 'select' | 'arrows' | 'none') => {\n          if (this._state.navigation !== navigation) {\n            return {navigation};\n          }\n        },\n        outsideDays: (outsideDays: 'visible' | 'collapsed' | 'hidden') => {\n          if (this._state.outsideDays !== outsideDays) {\n            return {outsideDays};\n          }\n        }\n      };\n\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _dateSelect$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    disabled: false,\n    displayMonths: 1,\n    firstDayOfWeek: 1,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectBoxes: {years: [], months: []},\n    selectedDate: null\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get dateSelect$(): Observable<NgbDate> { return this._dateSelect$.pipe(filter(date => date !== null)); }\n\n  set(options: DatepickerServiceInputs) {\n    let patch = Object.keys(options)\n                    .map(key => this._VALIDATORS[key](options[key]))\n                    .reduce((obj, part) => ({...obj, ...part}), {});\n\n    if (Object.keys(patch).length > 0) {\n      this._nextState(patch);\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date: NgbDate) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (!this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, date))) {\n      this._nextState({firstDate});\n    }\n  }\n\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (!this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._dateSelect$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  getMonth(struct: NgbDateStruct) {\n    for (let month of this._state.months) {\n      if (struct.month === month.number && struct.year === month.year) {\n        return month;\n      }\n    }\n    throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate));\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // terminate early if only focus visibility was changed\n    if ('focusVisible' in patch) {\n      return state;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n          'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\nexport type NgbDayTemplateData = (date: NgbDateStruct, current: {year: number, month: number}) => any;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n};\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n};\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  dayTemplateData?: NgbDayTemplateData,\n  disabled: boolean,\n  displayMonths: number,\n  firstDate?: NgbDate,\n  firstDayOfWeek: number,\n  focusDate?: NgbDate,\n  focusVisible: boolean,\n  lastDate?: NgbDate,\n  markDisabled?: NgbMarkDisabled,\n  maxDate?: NgbDate,\n  minDate?: NgbDate,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate\n};\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  dayTemplateData: (date: NgbDateStruct, current: {year: number, month: number}) => any;\n  footerTemplate: TemplateRef<any>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\nexport abstract class NgbDateAdapter<D> {\n  /**\n   * Converts a user-model date of type `D` to an `NgbDateStruct` for internal use.\n   */\n  abstract fromModel(value: D): NgbDateStruct;\n\n  /**\n   * Converts an internal `NgbDateStruct` date to a user-model date of type `D`.\n   */\n  abstract toModel(date: NgbDateStruct): D;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n}\n","import {fromEvent, merge, Subject} from 'rxjs';\nimport {filter, take, takeUntil} from 'rxjs/operators';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {DatepickerServiceInputs, NgbDatepickerService} from './datepicker-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate, isChangedMonth} from './datepicker-tools';\nimport {hasClassName} from '../util/util';\n\nexport const NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * An event emitted right before the navigation happens and the month displayed by the datepicker changes.\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * The currently displayed month.\n   */\n  current: {year: number, month: number};\n\n  /**\n   * The month we're navigating to.\n   */\n  next: {year: number, month: number};\n\n  /**\n   * Calling this function will prevent navigation from happening.\n   *\n   * @since 4.1.0\n   */\n  preventDefault: () => void;\n}\n\n/**\n * An interface that represents the readonly public state of the datepicker.\n *\n * Accessible via the `datepicker.state` getter\n *\n * @since 5.2.0\n */\nexport interface NgbDatepickerState {\n  /**\n   * The earliest date that can be displayed or selected\n   */\n  readonly minDate: NgbDate;\n\n  /**\n   * The latest date that can be displayed or selected\n   */\n  readonly maxDate: NgbDate;\n\n  /**\n   * The first visible date of currently displayed months\n   */\n  readonly firstDate: NgbDate;\n\n  /**\n   * The last visible date of currently displayed months\n   */\n  readonly lastDate: NgbDate;\n\n  /**\n   * The date currently focused by the datepicker\n   */\n  readonly focusedDate: NgbDate;\n\n  /**\n   * First dates of months currently displayed by the datepicker\n   *\n   * @since 5.3.0\n   */\n  readonly months: NgbDate[];\n}\n\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\n@Directive({selector: 'ng-template[ngbDatepickerContent]'})\nexport class NgbDatepickerContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker.scss'],\n  template: `\n    <ng-template #defaultDayTemplate let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <ng-template #defaultContentTemplate>\n      <div *ngFor=\"let month of model.months; let i = index;\" class=\"ngb-dp-month\">\n        <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\n          {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n        </div>\n        <ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate?.templateRef || defaultContentTemplate\"></ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, ControlValueAccessor {\n  model: DatepickerViewModel;\n\n  @ViewChild('defaultDayTemplate', {static: true}) private _defaultDayTemplate: TemplateRef<DayTemplateContext>;\n  @ViewChild('content', {static: true}) private _contentEl: ElementRef<HTMLElement>;\n  @ContentChild(NgbDatepickerContent, {static: true}) contentTemplate: NgbDatepickerContent;\n\n  private _controlValue: NgbDate;\n  private _destroyed$ = new Subject<void>();\n  private _publicState: NgbDatepickerState = <any>{};\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The latest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * The earliest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * An event emitted right before the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 5.2.0\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * Please use 'dateSelect' output instead, this will be deprecated in version 6.0 due to collision with native\n   * 'select' event.\n   */\n  @Output() select = this.dateSelect;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _service: NgbDatepickerService, private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n,\n      config: NgbDatepickerConfig, cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date => { this.dateSelect.emit(date); });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null;\n\n      // update public state\n      this._publicState = {\n        maxDate: model.maxDate,\n        minDate: model.minDate,\n        firstDate: model.firstDate,\n        lastDate: model.lastDate,\n        focusedDate: model.focusDate,\n        months: model.months.map(viewModel => viewModel.firstDate)\n      };\n\n      let navigationPrevented = false;\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month},\n          preventDefault: () => navigationPrevented = true\n        });\n\n        // can't prevent the very first navigation\n        if (navigationPrevented && oldDate !== null) {\n          this._service.open(oldDate);\n          return;\n        }\n      }\n\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      cd.markForCheck();\n    });\n  }\n\n  /**\n   *  Returns the readonly public state of the datepicker\n   *\n   * @since 5.2.0\n   */\n  get state(): NgbDatepickerState { return this._publicState; }\n\n  /**\n   *  Returns the calendar service used in the specific datepicker instance.\n   *\n   *  @since 5.3.0\n   */\n  get calendar(): NgbCalendar { return this._calendar; }\n\n  /**\n   *  Focuses on given date.\n   */\n  focusDate(date: NgbDateStruct): void { this._service.focus(NgbDate.from(date)); }\n\n  /**\n   *  Selects focused date.\n   */\n  focusSelect(): void { this._service.focusSelect(); }\n\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    this._service.open(NgbDate.from(date ? date.day ? date as NgbDateStruct : {...date, day: 1} : null));\n  }\n\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(() => {\n      const focusIns$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusin');\n      const focusOuts$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusout');\n      const {nativeElement} = this._elementRef;\n\n      // we're changing 'focusVisible' only when entering or leaving months view\n      // and ignoring all focus events where both 'target' and 'related' target are day cells\n      merge(focusIns$, focusOuts$)\n          .pipe(\n              filter(\n                  ({target, relatedTarget}) =>\n                      !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') &&\n                        nativeElement.contains(target as Node) && nativeElement.contains(relatedTarget as Node))),\n              takeUntil(this._destroyed$))\n          .subscribe(({type}) => this._ngZone.run(() => this._service.set({focusVisible: type === 'focusin'})));\n    });\n  }\n\n  ngOnDestroy() { this._destroyed$.next(); }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      const inputs: DatepickerServiceInputs = {};\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n       'outsideDays']\n          .forEach(name => inputs[name] = this[name]);\n      this._service.set(inputs);\n\n      this.navigateTo(this.startDate);\n    }\n    if (!this.dayTemplate) {\n      this.dayTemplate = this._defaultDayTemplate;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const inputs: DatepickerServiceInputs = {};\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n     'outsideDays']\n        .filter(name => name in changes)\n        .forEach(name => inputs[name] = this[name]);\n    this._service.set(inputs);\n\n    if ('startDate' in changes) {\n      const {currentValue, previousValue} = changes.startDate;\n      if (isChangedMonth(previousValue, currentValue)) {\n        this.navigateTo(this.startDate);\n      }\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(disabled: boolean) { this._service.set({disabled}); }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n    this._service.select(this._controlValue);\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDatepicker} from './datepicker';\nimport {Key} from '../util/key';\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerKeyboardService {\n  /**\n   * Processes a keyboard event.\n   */\n  processKey(event: KeyboardEvent, datepicker: NgbDatepicker) {\n    const {state, calendar} = datepicker;\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.PageUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.PageDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.End:\n        datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n        break;\n      case Key.Home:\n        datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n        break;\n      case Key.ArrowLeft:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.ArrowRight:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.Enter:\n      case Key.Space:\n        datepicker.focusSelect();\n        break;\n      default:\n        return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDatepicker} from './datepicker';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\n@Component({\n  selector: 'ngb-datepicker-month',\n  host: {'role': 'grid', '(keydown)': 'onKeyDown($event)'},\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-month.scss'],\n  template: `\n    <div *ngIf=\"datepicker.showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n      <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day); $event.preventDefault()\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [class.ngb-dp-today]=\"day.context.today\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonth {\n  /**\n   * The first date of month to be rendered.\n   *\n   * This month must one of the months present in the\n   * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n   */\n  @Input()\n  set month(month: NgbDateStruct) {\n    this.viewModel = this._service.getMonth(month);\n  }\n\n  viewModel: MonthViewModel;\n\n  constructor(\n      public i18n: NgbDatepickerI18n, public datepicker: NgbDatepicker,\n      private _keyboardService: NgbDatepickerKeyboardService, private _service: NgbDatepickerService) {}\n\n  onKeyDown(event: KeyboardEvent) { this._keyboardService.processKey(event, this.datepicker); }\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.datepicker.onDateSelect(day.date);\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation.scss'],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickPrev($event)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickNext($event)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  onClickPrev(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.PREV);\n  }\n\n  onClickNext(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.NEXT);\n  }\n}\n","import {NgZone} from '@angular/core';\nimport {fromEvent, Observable, race} from 'rxjs';\nimport {delay, filter, map, takeUntil, tap, withLatestFrom} from 'rxjs/operators';\nimport {Key} from './key';\nimport {closest} from './util';\n\nconst isContainedIn = (element: HTMLElement, array?: HTMLElement[]) =>\n    array ? array.some(item => item.contains(element)) : false;\n\nconst matchesSelectorIfAny = (element: HTMLElement, selector?: string) =>\n    !selector || closest(element, selector) != null;\n\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = (() => {\n  const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) ||\n      (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\n  const isAndroid = () => /Android/.test(navigator.userAgent);\n\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})();\n\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = fn => isMobile ? () => setTimeout(() => fn(), 100) : fn;\n\nexport function ngbAutoClose(\n    zone: NgZone, document: any, type: boolean | 'inside' | 'outside', close: () => void, closed$: Observable<any>,\n    insideElements: HTMLElement[], ignoreElements?: HTMLElement[], insideSelector?: string) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(() => {\n\n      const shouldCloseOnClick = (event: MouseEvent) => {\n        const element = event.target as HTMLElement;\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } else /* if (type === true) */ {\n          return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n        }\n      };\n\n      const escapes$ = fromEvent<KeyboardEvent>(document, 'keydown')\n                           .pipe(\n                               takeUntil(closed$),\n                               // tslint:disable-next-line:deprecation\n                               filter(e => e.which === Key.Escape), tap(e => e.preventDefault()));\n\n\n      // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n      const mouseDowns$ =\n          fromEvent<MouseEvent>(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n\n      const closeableClicks$ = fromEvent<MouseEvent>(document, 'mouseup')\n                                   .pipe(\n                                       withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0),\n                                       takeUntil(closed$)) as Observable<MouseEvent>;\n\n\n      race<Event>([escapes$, closeableClicks$]).subscribe(() => zone.run(close));\n    }));\n  }\n}\n","import {NgZone} from '@angular/core';\n\nimport {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\n\nimport {Key} from './key';\n\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: HTMLElement[] =\n      Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR) as NodeListOf<HTMLElement>)\n          .filter(el => el.tabIndex !== -1);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nexport const ngbFocusTrap =\n    (zone: NgZone, element: HTMLElement, stopFocusTrap$: Observable<any>, refocusOnClick = false) => {\n      zone.runOutsideAngular(() => {\n        // last focused element\n        const lastFocusedElement$ =\n            fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n        // 'tab' / 'shift+tab' stream\n        fromEvent<KeyboardEvent>(element, 'keydown')\n            .pipe(\n                takeUntil(stopFocusTrap$),\n                // tslint:disable:deprecation\n                filter(e => e.which === Key.Tab),\n                // tslint:enable:deprecation\n                withLatestFrom(lastFocusedElement$))\n            .subscribe(([tabEvent, focusedElement]) => {\n              const[first, last] = getFocusableBoundaryElements(element);\n\n              if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n                last.focus();\n                tabEvent.preventDefault();\n              }\n\n              if (focusedElement === last && !tabEvent.shiftKey) {\n                first.focus();\n                tabEvent.preventDefault();\n              }\n            });\n\n        // inside click\n        if (refocusOnClick) {\n          fromEvent(element, 'click')\n              .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n              .subscribe(lastFocusedElement => lastFocusedElement.focus());\n        }\n      });\n    };\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n      elPosition = {\n        top: elPosition.top,\n        bottom: elPosition.bottom,\n        left: elPosition.left,\n        right: elPosition.right,\n        height: elPosition.height,\n        width: elPosition.width\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  /*\n    Return false if the element to position is outside the viewport\n  */\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      boolean {\n    const[placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\n\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n\n    const marginTop = parseFloat(targetElStyles.marginTop);\n    const marginBottom = parseFloat(targetElStyles.marginBottom);\n    const marginLeft = parseFloat(targetElStyles.marginLeft);\n    const marginRight = parseFloat(targetElStyles.marginRight);\n\n    let topPosition = 0;\n    let leftPosition = 0;\n\n    switch (placementPrimary) {\n      case 'top':\n        topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\n        break;\n      case 'bottom':\n        topPosition = (hostElPosition.top + hostElPosition.height);\n        break;\n      case 'left':\n        leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\n        break;\n      case 'right':\n        leftPosition = (hostElPosition.left + hostElPosition.width);\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        topPosition = hostElPosition.top;\n        break;\n      case 'bottom':\n        topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        leftPosition = hostElPosition.left;\n        break;\n      case 'right':\n        leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\n        } else {\n          topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\n        }\n        break;\n    }\n\n    /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n    // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n    targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;\n\n    // Check if the targetElement is inside the viewport\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const html = document.documentElement;\n    const windowHeight = window.innerHeight || html.clientHeight;\n    const windowWidth = window.innerWidth || html.clientWidth;\n\n    return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\n        targetElBCR.bottom <= windowHeight;\n  }\n}\n\nconst placementSeparator = /\\s+/;\nconst positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean, baseClass?: string): Placement {\n  let placementVals: Array<Placement> =\n      Array.isArray(placement) ? placement : placement.split(placementSeparator) as Array<Placement>;\n\n  const allowedPlacements = [\n    'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\n    'right-top', 'right-bottom'\n  ];\n\n  const classList = targetElement.classList;\n  const addClassesToTarget = (targetPlacement: Placement): Array<string> => {\n    const[primary, secondary] = targetPlacement.split('-');\n    const classes = [];\n    if (baseClass) {\n      classes.push(`${baseClass}-${primary}`);\n      if (secondary) {\n        classes.push(`${baseClass}-${primary}-${secondary}`);\n      }\n\n      classes.forEach((classname) => { classList.add(classname); });\n    }\n    return classes;\n  };\n\n  // Remove old placement classes to avoid issues\n  if (baseClass) {\n    allowedPlacements.forEach((placementToRemove) => { classList.remove(`${baseClass}-${placementToRemove}`); });\n  }\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n\n  // Required for transform:\n  const style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  style['will-change'] = 'transform';\n\n  let testPlacement: Placement;\n  let isInViewport = false;\n  for (testPlacement of placementVals) {\n    let addedClasses = addClassesToTarget(testPlacement);\n\n    if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n      isInViewport = true;\n      break;\n    }\n\n    // Remove the baseClasses for further calculation\n    if (baseClass) {\n      addedClasses.forEach((classname) => { classList.remove(classname); });\n    }\n  }\n\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n\n  return testPlacement;\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>| string;\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {Injectable} from '@angular/core';\n\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given `string` to an `NgbDateStruct`.\n   *\n   * Implementations should try their best to provide a result, even\n   * partial. They must return `null` if the value can't be parsed.\n   */\n  abstract parse(value: string): NgbDateStruct;\n\n  /**\n   * Formats the given `NgbDateStruct` to a `string`.\n   *\n   * Implementations should return an empty string if the given date is `null`,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   */\n  abstract format(date: NgbDateStruct): string;\n}\n\n@Injectable()\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbInputDatepickerConfig extends NgbDatepickerConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  container: null | 'body';\n  positionTarget: string | HTMLElement;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  restoreFocus: true | HTMLElement | string = true;\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator} from '@angular/forms';\n\nimport {ngbAutoClose} from '../util/autoclose';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {PlacementArray, positionElements} from '../util/positioning';\n\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbInputDatepickerConfig} from './datepicker-input-config';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {isString} from '../util/util';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(focus)': 'onFocus()',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [\n    NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR,\n    {provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig}\n  ],\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  private _cRef: ComponentRef<NgbDatepicker> = null;\n  private _disabled = false;\n  private _elWithFocus = null;\n  private _model: NgbDate;\n  private _inputValue: string;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * * `true` - the popup will close on both date selection and outside click.\n   * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n   * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The earliest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * The latest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * The preferred placement of the datepicker popup.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * If `true`, when closing datepicker will focus element that was focused before datepicker was opened.\n   *\n   * Alternatively you could provide a selector or an `HTMLElement` to focus. If the element doesn't exist or invalid,\n   * we'll fallback to focus document body.\n   *\n   * @since 5.2.0\n   */\n  @Input() restoreFocus: true | string | HTMLElement;\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * A css selector or html element specifying the element the datepicker popup should be positioned against.\n   *\n   * By default the input is used as a target.\n   *\n   * @since 4.2.0\n   */\n  @Input() positionTarget: string | HTMLElement;\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * Event emitted right after the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event fired after closing datepicker window.\n   *\n   * @since 4.2.0\n   */\n  @Output() closed = new EventEmitter<void>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      private _ngZone: NgZone, private _calendar: NgbCalendar, private _dateAdapter: NgbDateAdapter<any>,\n      @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      config: NgbInputDatepickerConfig) {\n    ['autoClose', 'container', 'positionTarget', 'placement'].forEach(input => this[input] = config[input]);\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => this._updatePopupPosition());\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    const value = c.value;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    if (!this._calendar.isValid(ngbDate)) {\n      return {'ngbDate': {invalid: c.value}};\n    }\n\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {requiredBefore: this.minDate}};\n    }\n\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {requiredAfter: this.maxDate}};\n    }\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n    }\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker popup.\n   *\n   * If the related form control contains a valid date, the corresponding month will be opened.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n        this._onTouched();\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      this._elWithFocus = this._document.activeElement;\n      ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n      this._cRef.instance.focus();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.closed, [],\n          [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n      this.closed.emit();\n      this._changeDetector.markForCheck();\n\n      // restore focus\n      let elementToFocus = this._elWithFocus;\n      if (isString(this.restoreFocus)) {\n        elementToFocus = this._document.querySelector(this.restoreFocus);\n      } else if (this.restoreFocus !== undefined) {\n        elementToFocus = this.restoreFocus;\n      }\n\n      // in IE document.activeElement can contain an object without 'focus()' sometimes\n      if (elementToFocus && elementToFocus['focus']) {\n        elementToFocus.focus();\n      } else {\n        this._document.body.focus();\n      }\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup.\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  onFocus() { this._elWithFocus = this._elRef.nativeElement; }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n\n      if (this.isOpen()) {\n        if (changes['minDate']) {\n          this._cRef.instance.minDate = this._dateAdapter.toModel(changes.minDate.currentValue);\n        }\n        if (changes['maxDate']) {\n          this._cRef.instance.maxDate = this._dateAdapter.toModel(changes.maxDate.currentValue);\n        }\n        this._cRef.instance.ngOnChanges(changes);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.addClass(nativeElement, 'show');\n\n    if (this.container === 'body') {\n      this._renderer.addClass(nativeElement, 'ngb-dp-body');\n    }\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n    datepickerInstance.dateSelect.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate) {\n    const value = this._parserFormatter.format(model);\n    this._inputValue = value;\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n\n  private _updatePopupPosition() {\n    if (!this._cRef) {\n      return;\n    }\n\n    let hostElement: HTMLElement;\n    if (isString(this.positionTarget)) {\n      hostElement = this._document.querySelector(this.positionTarget);\n    } else if (this.positionTarget instanceof HTMLElement) {\n      hostElement = this.positionTarget;\n    } else {\n      hostElement = this._elRef.nativeElement;\n    }\n\n    if (this.positionTarget && !hostElement) {\n      throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n    }\n\n    positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-day-view.scss'],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ i18n.getDayNumerals(date) }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  AfterViewChecked,\n  ViewChild,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation-select.scss'],\n  template: `\n    <select #month\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select #year\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect implements AfterViewChecked {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  @ViewChild('month', {static: true, read: ElementRef}) monthSelect: ElementRef;\n  @ViewChild('year', {static: true, read: ElementRef}) yearSelect: ElementRef;\n\n  private _month = -1;\n  private _year = -1;\n\n  constructor(public i18n: NgbDatepickerI18n, private _renderer: Renderer2) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n\n  ngAfterViewChecked() {\n    if (this.date) {\n      if (this.date.month !== this._month) {\n        this._month = this.date.month;\n        this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n      }\n      if (this.date.year !== this._year) {\n        this._year = this.date.year;\n        this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n      }\n    }\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysPerMonth(month: number, year: number): number;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hDate: NgbDate): Date;\n\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this._setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n\n\n  isValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  private _setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  private _setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  private _setYear(date: NgbDate, year: number): NgbDate {\n    date.year = +year;\n    return date;\n  }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate: Date): NgbDate {\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay =\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysPerMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  // Ignores the time part in date1 and date2:\n  const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  const diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n  getDaysPerMonth(hMonth: number, hYear: number): number {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n}\n","import {NgbDate} from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n  date.year = +yearValue;\n  return date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n  return Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n  // Jalali years starting the 33-year rule.\n  let breaks =\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {leap: leap, gy: gYear, march: march};\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\n      ,\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\n      jalaliMonth, numberOfDays;\n\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {isInteger} from '../../util/util';\n\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n        !isNaN(toGregorian(date).getTime());\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year: number): boolean {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year: number): number {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month: number, year: number): number {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year: number): number {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year: number): number {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nexport function isHebrewLeapYear(year: number): boolean {\n  let b = (year * 12 + 17) % 19;\n  return b >= ((b < 0) ? -7 : 12);\n}\n\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nexport function getDaysInHebrewMonth(month: number, year: number): number {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\n  }\n  if (yearType > 1) {\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\n  }\n  return daysInMonth[month - 1];\n}\n\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\n  let numberOfDay = 0;\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\n\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  let hMonth = 1;\n  let hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nexport function hebrewNumerals(numerals: number): string {\n  if (!numerals) {\n    return '';\n  }\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n  const hArray10_19 = [\n    '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n    '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n  ];\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n  const hArray100_900 = [\n    '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n    '\\u05ea\\u05ea\\u05e7'\n  ];\n  const hArray1000_9000 = [\n    '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n    '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n  ];\n  const geresh = '\\u05f3', gershaim = '\\u05f4';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n  while (numerals > 0) {\n    let m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n","import {NgbDate} from '../ngb-date';\nimport {fromJSDate, NgbCalendar, NgbPeriod, toJSDate} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\nimport {\n  fromGregorian,\n  getDayNumberInHebrewYear,\n  getDaysInHebrewMonth,\n  isHebrewLeapYear,\n  toGregorian,\n  setHebrewDay,\n  setHebrewMonth\n} from './hebrew';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths(year?: number) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() { return 6; }\n\n  isValid(date: NgbDate): boolean {\n    let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n    b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n    b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n    return b && !isNaN(toGregorian(date).getTime());\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setHebrewDay(date, number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  /**\n   * @since 3.4.0\n   */\n  toGregorian(date: NgbDate): NgbDate { return fromJSDate(toGregorian(date)); }\n\n  /**\n   * @since 3.4.0\n   */\n  fromGregorian(date: NgbDate): NgbDate { return fromGregorian(toJSDate(date)); }\n}\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\nimport {NgbDateStruct} from '../../index';\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\nimport {Injectable} from '@angular/core';\n\n\nconst WEEKDAYS = ['×©× ×', '×©×××©×', '×¨×××¢×', '××××©×', '×©××©×', '×©××ª', '×¨××©××'];\nconst MONTHS = ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\nconst MONTHS_LEAP =\n    ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨ ××³', '×××¨ ××³', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\n\n  getMonthFullName(month: number, year?: number): string {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n  }\n\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\n\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\n\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  /**\n   * Converts a native `Date` to a `NgbDateStruct`.\n   */\n  fromModel(date: Date): NgbDateStruct {\n    return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n  }\n\n  /**\n   * Converts a `NgbDateStruct` to a native `Date`.\n   */\n  toModel(date: NgbDateStruct): Date {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n                                                                                          null;\n  }\n\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // avoid 30 -> 1930 conversion\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {NgbDateNativeAdapter} from './ngb-date-native-adapter';\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n    // avoid 30 -> 1930 conversion\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker, NgbDatepickerContent} from './datepicker';\nimport {NgbDatepickerMonth} from './datepicker-month';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\n\nexport {NgbDatepicker, NgbDatepickerContent, NgbDatepickerNavigateEvent, NgbDatepickerState} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar, NgbPeriod, NgbCalendarGregorian} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\nexport {NgbDatepickerMonth} from './datepicker-month';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbInputDatepickerConfig} from './datepicker-input-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDate} from './ngb-date';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nexport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect,\n    NgbDatepickerDayView, NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  container: null | 'body';\n}\n","import {\n  ChangeDetectorRef,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  AfterContentInit,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  Optional\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, Subject, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {Placement, PlacementArray, positionElements} from '../util/positioning';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\n\nimport {NgbDropdownConfig} from './dropdown-config';\n\n@Directive({selector: '.navbar'})\nexport class NgbNavbar {\n}\n\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n@Directive({selector: '[ngbDropdownItem]', host: {'class': 'dropdown-item', '[class.disabled]': 'disabled'}})\nexport class NgbDropdownItem {\n  private _disabled = false;\n\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = <any>value === '' || value === true;  // accept an empty attribute as true\n  }\n\n  get disabled(): boolean { return this._disabled; }\n\n  constructor(public elementRef: ElementRef<HTMLElement>) {}\n}\n\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[class.show]': 'dropdown.isOpen()',\n    '[attr.x-placement]': 'placement',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)',\n    '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n    '(keydown.Space)': 'dropdown.onKeyDown($event)'\n  }\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  @ContentChildren(NgbDropdownItem) menuItems: QueryList<NgbDropdownItem>;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown) {}\n}\n\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  getNativeElement() { return this._elementRef.nativeElement; }\n}\n\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'dropdown.toggle()',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n}\n\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements AfterContentInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n  private _bodyContainer: HTMLElement;\n\n  @ContentChild(NgbDropdownMenu, {static: false}) private _menu: NgbDropdownMenu;\n  @ContentChild(NgbDropdownMenu, {read: ElementRef, static: false}) private _menuElement: ElementRef;\n  @ContentChild(NgbDropdownAnchor, {static: false}) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\n   *\n   * * `true` - the dropdown will close on both outside and inside (menu) clicks.\n   * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\n   * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   * Defines whether or not the dropdown menu is opened initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * The preferred placement of the dropdown.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n  * A selector specifying the element the dropdown should be appended to.\n  * Currently only supports \"body\".\n  *\n  * @since 4.1.0\n  */\n  @Input() container: null | 'body';\n\n  /**\n   * Enable or disable the dynamic positioning. The default value is dynamic unless the dropdown is used\n   * inside a Bootstrap navbar. If you need custom placement for a dropdown in a navbar, set it to\n   * dynamic explicitly. See the [positioning of dropdown](#/positioning#dropdown)\n   * and the [navbar demo](/#/components/dropdown/examples#navbar) for more details.\n   *\n   * @since 4.2.0\n   */\n  @Input() display: 'dynamic' | 'static';\n\n  /**\n   * An event fired when the dropdown is opened or closed.\n   *\n   * The event payload is a `boolean`:\n   * * `true` - the dropdown was opened\n   * * `false` - the dropdown was closed\n   */\n  @Output() openChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2,\n      @Optional() ngbNavbar: NgbNavbar) {\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n\n    this.display = ngbNavbar ? 'static' : 'dynamic';\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngAfterContentInit() {\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._applyPlacementClasses();\n      if (this._open) {\n        this._setCloseHandlers();\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.container && this._open) {\n      this._applyContainer(this.container);\n    }\n\n    if (changes.placement && !changes.placement.isFirstChange) {\n      this._applyPlacementClasses();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._applyContainer(this.container);\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n    }\n  }\n\n  private _setCloseHandlers() {\n    const anchor = this._anchor;\n    ngbAutoClose(\n        this._ngZone, this._document, this.autoClose, () => this.close(), this._closed$,\n        this._menu ? [this._menuElement.nativeElement] : [], anchor ? [anchor.getNativeElement()] : [],\n        '.dropdown-item,.dropdown-divider');\n  }\n\n  /**\n   * Closes the dropdown menu.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._resetContainer();\n      this._closed$.next();\n      this.openChange.emit(false);\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this._resetContainer();\n\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    const key = event.which;\n    const itemElements = this._getMenuElements();\n\n    let position = -1;\n    let isEventFromItems = false;\n    let itemElement: HTMLElement = null;\n    const isEventFromToggle = this._isEventFromToggle(event);\n\n    if (!isEventFromToggle && itemElements.length) {\n      itemElements.forEach((item, index) => {\n        if (item.contains(event.target as HTMLElement)) {\n          isEventFromItems = true;\n          itemElement = item;\n        }\n        if (item === this._document.activeElement) {\n          position = index;\n        }\n      });\n    }\n\n    // closing on Enter / Space\n    if (key === Key.Space || key === Key.Enter) {\n      if (isEventFromItems && (this.autoClose === true || this.autoClose === 'inside')) {\n        // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n        // So we have to register a one-time click handler that will fire after any user defined click handlers\n        // to close the dropdown\n        fromEvent(itemElement, 'click').pipe(take(1)).subscribe(() => this.close());\n      }\n      return;\n    }\n\n    // opening / navigating\n    if (isEventFromToggle || isEventFromItems) {\n      this.open();\n\n      if (itemElements.length) {\n        switch (key) {\n          case Key.ArrowDown:\n            position = Math.min(position + 1, itemElements.length - 1);\n            break;\n          case Key.ArrowUp:\n            if (this._isDropup() && position === -1) {\n              position = itemElements.length - 1;\n              break;\n            }\n            position = Math.max(position - 1, 0);\n            break;\n          case Key.Home:\n            position = 0;\n            break;\n          case Key.End:\n            position = itemElements.length - 1;\n            break;\n        }\n        itemElements[position].focus();\n      }\n      event.preventDefault();\n    }\n  }\n\n  private _isDropup(): boolean { return this._elementRef.nativeElement.classList.contains('dropup'); }\n\n  private _isEventFromToggle(event: KeyboardEvent) {\n    return this._anchor.getNativeElement().contains(event.target as HTMLElement);\n  }\n\n  private _getMenuElements(): HTMLElement[] {\n    const menu = this._menu;\n    if (menu == null) {\n      return [];\n    }\n    return menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n  }\n\n  private _positionMenu() {\n    const menu = this._menu;\n    if (this.isOpen() && menu) {\n      this._applyPlacementClasses(\n          this.display === 'dynamic' ?\n              positionElements(\n                  this._anchor.anchorEl, this._bodyContainer || this._menuElement.nativeElement, this.placement,\n                  this.container === 'body') :\n              this._getFirstPlacement(this.placement));\n    }\n  }\n\n  private _getFirstPlacement(placement: PlacementArray): Placement {\n    return Array.isArray(placement) ? placement[0] : placement.split(' ')[0] as Placement;\n  }\n\n  private _resetContainer() {\n    const renderer = this._renderer;\n    const menuElement = this._menuElement;\n    if (menuElement) {\n      const dropdownElement = this._elementRef.nativeElement;\n      const dropdownMenuElement = menuElement.nativeElement;\n\n      renderer.appendChild(dropdownElement, dropdownMenuElement);\n      renderer.removeStyle(dropdownMenuElement, 'position');\n      renderer.removeStyle(dropdownMenuElement, 'transform');\n    }\n    if (this._bodyContainer) {\n      renderer.removeChild(this._document.body, this._bodyContainer);\n      this._bodyContainer = null;\n    }\n  }\n\n  private _applyContainer(container: null | 'body' = null) {\n    this._resetContainer();\n    if (container === 'body') {\n      const renderer = this._renderer;\n      const dropdownMenuElement = this._menuElement.nativeElement;\n      const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n\n      // Override some styles to have the positionning working\n      renderer.setStyle(bodyContainer, 'position', 'absolute');\n      renderer.setStyle(dropdownMenuElement, 'position', 'static');\n      renderer.setStyle(bodyContainer, 'z-index', '1050');\n\n      renderer.appendChild(bodyContainer, dropdownMenuElement);\n      renderer.appendChild(this._document.body, bodyContainer);\n    }\n  }\n\n  private _applyPlacementClasses(placement?: Placement) {\n    const menu = this._menu;\n    if (menu) {\n      if (!placement) {\n        placement = this._getFirstPlacement(this.placement);\n      }\n\n      const renderer = this._renderer;\n      const dropdownElement = this._elementRef.nativeElement;\n\n      // remove the current placement classes\n      renderer.removeClass(dropdownElement, 'dropup');\n      renderer.removeClass(dropdownElement, 'dropdown');\n      menu.placement = this.display === 'static' ? null : placement;\n\n      /*\n      * apply the new placement\n      * in case of top use up-arrow or down-arrow otherwise\n      */\n      const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n      renderer.addClass(dropdownElement, dropdownClass);\n\n      const bodyContainer = this._bodyContainer;\n      if (bodyContainer) {\n        renderer.removeClass(bodyContainer, 'dropup');\n        renderer.removeClass(bodyContainer, 'dropdown');\n        renderer.addClass(bodyContainer, dropdownClass);\n      }\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\n\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES =\n    [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n}\n","import {Injectable, Injector} from '@angular/core';\n\n/**\n * Options available when opening new modal windows with `NgbModal.open()` method.\n */\nexport interface NgbModalOptions {\n  /**\n   * `aria-labelledby` attribute value to set on the modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * If `true`, the backdrop element will be created for a given modal.\n   *\n   * Alternatively, specify `'static'` for a backdrop which doesn't close the modal on click.\n   *\n   * Default value is `true`.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Callback right before the modal will be dismissed.\n   *\n   * If this function returns:\n   * * `false`\n   * * a promise resolved with `false`\n   * * a promise that is rejected\n   *\n   * then the modal won't be dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * If `true`, the modal will be centered vertically.\n   *\n   * Default value is `false`.\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * A selector specifying the element all new modal windows should be appended to.\n   * Since v5.3.0 it is also possible to pass the reference to an `HTMLElement`.\n   *\n   * If not specified, will be `body`.\n   */\n  container?: string | HTMLElement;\n\n  /**\n   * The `Injector` to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * If `true`, the modal will be closed when `Escape` key is pressed\n   *\n   * Default value is `true`.\n   */\n  keyboard?: boolean;\n\n  /**\n   * Scrollable modal content (false by default).\n   *\n   * @since 5.0.0\n   */\n  scrollable?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg' | 'xl' | string;\n\n  /**\n   * A custom class to append to the modal window.\n   */\n  windowClass?: string;\n\n  /**\n   * A custom class to append to the modal backdrop.\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\n@Injectable({providedIn: 'root'})\nexport class NgbModalConfig implements Required<NgbModalOptions> {\n  ariaLabelledBy: string;\n  backdrop: boolean | 'static' = true;\n  beforeDismiss: () => boolean | Promise<boolean>;\n  centered: boolean;\n  container: string;\n  injector: Injector;\n  keyboard = true;\n  scrollable: boolean;\n  size: 'sm' | 'lg' | 'xl' | string;\n  windowClass: string;\n  backdropClass: string;\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ApplicationRef\n} from '@angular/core';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>;\n  private _contentRef: ContentRef;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver,\n      private _applicationRef: ApplicationRef) {}\n\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), 0, this._injector,\n          this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n\n  close() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._applicationRef.detachView(this._contentRef.viewRef);\n        this._contentRef.viewRef.destroy();\n        this._contentRef = null;\n      }\n    }\n  }\n\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(context);\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\nconst noop = () => {};\n\n\n\n/** Type for the callback used to revert the scrollbar compensation. */\nexport type CompensationReverter = () => void;\n\n\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollBar {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * To be called right before a potential vertical scrollbar would be removed:\n   *\n   * - if there was a scrollbar, adds some compensation padding to the body\n   * to keep the same layout as when the scrollbar is there\n   * - if there was none, there is nothing to do\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  compensate(): CompensationReverter {\n    const width = this._getWidth();\n    return !this._isPresent(width) ? noop : this._adjustBody(width);\n  }\n\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n  private _adjustBody(scrollbarWidth: number): CompensationReverter {\n    const body = this._document.body;\n    const userSetPaddingStyle = body.style.paddingRight;\n    const actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${actualPadding + scrollbarWidth}px`;\n    return () => body.style['padding-right'] = userSetPaddingStyle;\n  }\n\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n  private _isPresent(scrollbarWidth: number): boolean {\n    const rect = this._document.body.getBoundingClientRect();\n    const bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\n    const uncertainty = 0.1 * scrollbarWidth;\n    return bodyToViewportGap >= scrollbarWidth - uncertainty;\n  }\n\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n  private _getWidth(): number {\n    const measurer = this._document.createElement('div');\n    measurer.className = 'modal-scrollbar-measure';\n\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n\n    return width;\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  encapsulation: ViewEncapsulation.None,\n  template: '',\n  host:\n      {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050'}\n})\nexport class NgbModalBackdrop {\n  @Input() backdropClass: string;\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nexport class NgbActiveModal {\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nexport class NgbModalRef {\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n   */\n  get componentInstance(): any {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  /**\n   * The promise that is resolved when the modal is closed and rejected when the modal is dismissed.\n   */\n  result: Promise<any>;\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {fromEvent, Subject} from 'rxjs';\nimport {filter, switchMap, take, takeUntil, tap} from 'rxjs/operators';\n\nimport {getFocusableBoundaryElements} from '../util/focus-trap';\nimport {Key} from '../util/key';\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '[attr.aria-modal]': 'true',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n  },\n  template: `\n    <div #dialog [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\n     (scrollable ? ' modal-dialog-scrollable' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./modal.scss']\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @ViewChild('dialog', {static: true}) private _dialogEl: ElementRef<HTMLElement>;\n\n  @Input() ariaLabelledBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() scrollable: string;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(\n      @Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>, private _zone: NgZone) {}\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() { this._elWithFocus = this._document.activeElement; }\n\n  ngAfterViewInit() {\n    const {nativeElement} = this._elRef;\n    this._zone.runOutsideAngular(() => {\n\n      fromEvent<KeyboardEvent>(nativeElement, 'keydown')\n          .pipe(\n              takeUntil(this._closed$),\n              // tslint:disable-next-line:deprecation\n              filter(e => e.which === Key.Escape && this.keyboard))\n          .subscribe(event => requestAnimationFrame(() => {\n                       if (!event.defaultPrevented) {\n                         this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n                       }\n                     }));\n\n      // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n      // inside the modal dialog and releasing it outside\n      let preventClose = false;\n      fromEvent<MouseEvent>(this._dialogEl.nativeElement, 'mousedown')\n          .pipe(\n              takeUntil(this._closed$), tap(() => preventClose = false),\n              switchMap(() => fromEvent<MouseEvent>(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))),\n              filter(({target}) => nativeElement === target))\n          .subscribe(() => { preventClose = true; });\n\n      // We're listening to 'click' to dismiss modal on modal window click, except when:\n      // 1. clicking on modal dialog itself\n      // 2. closing was prevented by mousedown/up handlers\n      // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n      fromEvent<MouseEvent>(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({target}) => {\n        if (this.backdrop === true && nativeElement === target && !preventClose) {\n          this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n        }\n        preventClose = false;\n      });\n    });\n\n    if (!nativeElement.contains(document.activeElement)) {\n      const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n      const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n\n      const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    this._zone.runOutsideAngular(() => {\n      setTimeout(() => elementToFocus.focus());\n      this._elWithFocus = null;\n    });\n\n    this._closed$.next();\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  NgZone,\n  RendererFactory2,\n  TemplateRef\n} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {ContentRef} from '../util/popup';\nimport {ScrollBar} from '../util/scrollbar';\nimport {isDefined, isString} from '../util/util';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalOptions} from './modal-config';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nimport {NgbModalWindow} from './modal-window';\n\n@Injectable({providedIn: 'root'})\nexport class NgbModalStack {\n  private _activeWindowCmptHasChanged = new Subject();\n  private _ariaHiddenValues: Map<Element, string> = new Map();\n  private _backdropAttributes = ['backdropClass'];\n  private _modalRefs: NgbModalRef[] = [];\n  private _windowAttributes =\n      ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size', 'windowClass'];\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2, private _ngZone: NgZone) {\n    // Trap focus on active WindowCmpt\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n        this._revertAriaHidden();\n        this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ?\n                                                                   this._document.querySelector(options.container) :\n                                                                   this._document.body;\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n    const removeBodyClass = () => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n        this._revertAriaHidden();\n      }\n    };\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef =\n        this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n    this._registerWindowCmpt(windowCmptRef);\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n\n  hasOpenModals(): boolean { return this._modalRefs.length > 0; }\n\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\n      ComponentRef<NgbModalWindow> {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, activeModal: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\n    const context = {\n      $implicit: activeModal,\n      close(result) { activeModal.close(result); },\n      dismiss(reason) { activeModal.dismiss(reason); }\n    };\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, context: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector =\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    const componentNativeEl = componentRef.location.nativeElement;\n    if (options.scrollable) {\n      (componentNativeEl as HTMLElement).classList.add('component-host-scrollable');\n    }\n    this._applicationRef.attachView(componentRef.hostView);\n    // FIXME: we should here get rid of the component nativeElement\n    // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n    return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n  }\n\n  private _setAriaHidden(element: Element) {\n    const parent = element.parentElement;\n    if (parent && element !== this._document.body) {\n      Array.from(parent.children).forEach(sibling => {\n        if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n          this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      });\n\n      this._setAriaHidden(parent);\n    }\n  }\n\n  private _revertAriaHidden() {\n    this._ariaHiddenValues.forEach((value, element) => {\n      if (value) {\n        element.setAttribute('aria-hidden', value);\n      } else {\n        element.removeAttribute('aria-hidden');\n      }\n    });\n    this._ariaHiddenValues.clear();\n  }\n\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n      }\n    };\n    this._modalRefs.push(ngbModalRef);\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\n    this._windowCmpts.push(ngbWindowCmpt);\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\nimport {NgbModalRef} from './modal-ref';\nimport {NgbModalStack} from './modal-stack';\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\n      private _config: NgbModalConfig) {}\n\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    const combinedOptions = Object.assign({}, this._config, options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n\n  /**\n   * Dismisses all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\n\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   *\n   * @since 3.3.0\n   */\n  hasOpenModals(): boolean { return this._modalStack.hasOpenModals(); }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbModal} from './modal';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nexport {NgbModal} from './modal';\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbNavConfig {\n  destroyOnHide = true;\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  roles: 'tablist' | false = 'tablist';\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectorRef,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport {isDefined} from '../util/util';\nimport {NgbNavConfig} from './nav-config';\n\nconst isValidNavId = (id: any) => isDefined(id) && id !== '';\n\nlet navCounter = 0;\n\n/**\n * Context passed to the nav content template.\n *\n * See [this demo](#/components/nav/examples#keep-content) as the example.\n *\n * @since 5.2.0\n */\nexport interface NgbNavContentContext {\n  /**\n   * If `true`, current nav content is visible and active\n   */\n  $implicit: boolean;\n}\n\n\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\n@Directive({selector: 'ng-template[ngbNavContent]'})\nexport class NgbNavContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\n@Directive({selector: '[ngbNavItem]', exportAs: 'ngbNavItem', host: {'[class.nav-item]': 'true'}})\nexport class NgbNavItem implements AfterContentChecked, OnInit {\n  private _nav: NgbNav;\n\n  /**\n   * If `true`, non-active current nav item content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * If `true`, the current nav item is disabled and can't be toggled by user.\n   *\n   * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n   */\n  @Input() disabled = false;\n\n  /**\n   * The id used for the DOM elements.\n   * Must be unique inside the document in case you have multiple `ngbNav`s on the page.\n   *\n   * Autogenerated as `ngb-nav-XXX` if not provided.\n   */\n  @Input() domId: string;\n\n  /**\n   * The id used as a model for active nav.\n   * It can be anything, but must be unique inside one `ngbNav`.\n   *\n   * The only limitation is that it is not possible to have the `''` (empty string) as id,\n   * because ` ngbNavItem `, `ngbNavItem=''` and `[ngbNavItem]=\"''\"` are indistinguishable\n   */\n  @Input('ngbNavItem') _id: any;\n\n  contentTpl: NgbNavContent | null;\n\n  @ContentChildren(NgbNavContent, {descendants: false}) contentTpls: QueryList<NgbNavContent>;\n\n  constructor(@Inject(forwardRef(() => NgbNav)) nav, public elementRef: ElementRef<any>) {\n    // TODO: cf https://github.com/angular/angular/issues/30106\n    this._nav = nav;\n  }\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.contentTpl = this.contentTpls.first;\n  }\n\n  ngOnInit() {\n    if (!isDefined(this.domId)) {\n      this.domId = `ngb-nav-${navCounter++}`;\n    }\n  }\n\n  get active() { return this._nav.activeId === this.id; }\n\n  get id() { return isValidNavId(this._id) ? this._id : this.domId; }\n\n  get panelDomId() { return `${this.domId}-panel`; }\n\n  isPanelInDom() {\n    return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n  }\n}\n\n\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: '[ngbNav]',\n  exportAs: 'ngbNav',\n  host: {\n    '[class.nav]': 'true',\n    '[class.flex-column]': `orientation === 'vertical'`,\n    '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n    '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n  }\n})\nexport class NgbNav implements AfterContentInit {\n  /**\n   * The id of the nav that should be active\n   *\n   * You could also use the `.select()` method and the `(navChange)` event\n   */\n  @Input() activeId: any;\n\n  /**\n   * The event emitted after the active nav changes\n   * The payload of the event is the newly active nav id\n   *\n   * If you want to prevent nav change, you should use `(navChange)` event\n   */\n  @Output() activeIdChange = new EventEmitter<any>();\n\n  /**\n   * If `true`, non-active nav content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * The orientation of navs.\n   *\n   * Using `vertical` will also add the `aria-orientation` attribute\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Role attribute generating strategy:\n   * - `false` - no role attributes will be generated\n   * - `'tablist'` - 'tablist', 'tab' and 'tabpanel' will be generated (default)\n   */\n  @Input() roles: 'tablist' | false;\n\n  @ContentChildren(NgbNavItem) items: QueryList<NgbNavItem>;\n\n  constructor(@Attribute('role') public role: string, config: NgbNavConfig, private _cd: ChangeDetectorRef) {\n    this.destroyOnHide = config.destroyOnHide;\n    this.orientation = config.orientation;\n    this.roles = config.roles;\n  }\n\n  /**\n   * The nav change event emitted right before the nav change happens on user click.\n   *\n   * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n   *\n   * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n   */\n  @Output() navChange = new EventEmitter<NgbNavChangeEvent>();\n\n  click(item: NgbNavItem) {\n    if (!item.disabled) {\n      this._updateActiveId(item.id);\n    }\n  }\n\n  /**\n   * Selects the nav with the given id and shows its associated pane.\n   * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n   */\n  select(id: any) { this._updateActiveId(id, false); }\n\n  ngAfterContentInit() {\n    if (!isDefined(this.activeId)) {\n      const nextId = this.items.first ? this.items.first.id : null;\n      if (isValidNavId(nextId)) {\n        this._updateActiveId(nextId, false);\n        this._cd.detectChanges();\n      }\n    }\n  }\n\n  private _updateActiveId(nextId: any, emitNavChange = true) {\n    if (this.activeId !== nextId) {\n      let defaultPrevented = false;\n\n      if (emitNavChange) {\n        this.navChange.emit({activeId: this.activeId, nextId, preventDefault: () => { defaultPrevented = true; }});\n      }\n\n      if (!defaultPrevented) {\n        this.activeId = nextId;\n        this.activeIdChange.emit(nextId);\n      }\n    }\n  }\n}\n\n\n/**\n * A directive to put on the nav link.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: 'a[ngbNavLink]',\n  host: {\n    '[id]': 'navItem.domId',\n    '[class.nav-link]': 'true',\n    '[class.nav-item]': 'hasNavItemClass()',\n    '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n    'href': '',\n    '[class.active]': 'navItem.active',\n    '[class.disabled]': 'navItem.disabled',\n    '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n    '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n    '[attr.aria-selected]': 'navItem.active',\n    '[attr.aria-disabled]': 'navItem.disabled',\n    '(click)': 'nav.click(navItem); $event.preventDefault()'\n  }\n})\nexport class NgbNavLink {\n  constructor(@Attribute('role') public role: string, public navItem: NgbNavItem, public nav: NgbNav) {}\n\n  hasNavItemClass() {\n    // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n    return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n  }\n}\n\n\n/**\n * The payload of the change event emitted right before the nav change happens on user click.\n *\n * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n *\n * @since 5.2.0\n */\nexport interface NgbNavChangeEvent {\n  /**\n   * Id of the currently active nav.\n   */\n  activeId: any;\n\n  /**\n   * Id of the newly selected nav.\n   */\n  nextId: any;\n\n  /**\n   * Function that will prevent nav change if called.\n   */\n  preventDefault: () => void;\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbNav} from './nav';\n\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\n@Component({\n  selector: '[ngbNavOutlet]',\n  host: {'[class.tab-content]': 'true'},\n  encapsulation: ViewEncapsulation.None,\n  template: `\n      <ng-template ngFor let-item [ngForOf]=\"nav.items\">\n          <div class=\"tab-pane\"\n               *ngIf=\"item.isPanelInDom()\"\n               [id]=\"item.panelDomId\"\n               [class.active]=\"item.active\"\n               [attr.role]=\"paneRole ? paneRole : nav.roles ? 'tabpanel' : undefined\"\n               [attr.aria-labelledby]=\"item.domId\">\n              <ng-template [ngTemplateOutlet]=\"item.contentTpl?.templateRef\" [ngTemplateOutletContext]=\"{$implicit: item.active}\"></ng-template>\n          </div>\n      </ng-template>\n  `\n})\nexport class NgbNavOutlet {\n  /**\n   * A role to set on the nav pane\n   */\n  @Input() paneRole;\n\n  /**\n   * Reference to the `NgbNav`\n   */\n  @Input('ngbNavOutlet') nav: NgbNav;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbNav, NgbNavContent, NgbNavItem, NgbNavLink} from './nav';\nimport {NgbNavOutlet} from './nav-outlet';\n\nexport {NgbNav, NgbNavContent, NgbNavContentContext, NgbNavItem, NgbNavLink, NgbNavChangeEvent} from './nav';\nexport {NgbNavOutlet} from './nav-outlet';\nexport {NgbNavConfig} from './nav-config';\n\nconst NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];\n\n@NgModule({declarations: NGB_NAV_DIRECTIVES, exports: NGB_NAV_DIRECTIVES, imports: [CommonModule]})\nexport class NgbNavModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  OnChanges,\n  ChangeDetectionStrategy,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A context for the\n * * `NgbPaginationFirst`\n * * `NgbPaginationPrevious`\n * * `NgbPaginationNext`\n * * `NgbPaginationLast`\n * * `NgbPaginationEllipsis`\n *\n * link templates in case you want to override one.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationLinkContext {\n  /**\n   * The currently selected page number\n   */\n  currentPage: number;\n\n  /**\n   * If `true`, the current link is disabled\n   */\n  disabled: boolean;\n}\n\n/**\n * A context for the `NgbPaginationNumber` link template in case you want to override one.\n *\n * Extends `NgbPaginationLinkContext`.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationNumberContext extends NgbPaginationLinkContext {\n  /**\n   * The page number, displayed by the current page link.\n   */\n  $implicit: number;\n}\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationEllipsis]'})\nexport class NgbPaginationEllipsis {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationFirst]'})\nexport class NgbPaginationFirst {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationLast]'})\nexport class NgbPaginationLast {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNext]'})\nexport class NgbPaginationNext {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNumber]'})\nexport class NgbPaginationNumber {\n  constructor(public templateRef: TemplateRef<NgbPaginationNumberContext>) {}\n}\n\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationPrevious]'})\nexport class NgbPaginationPrevious {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\" [attr.aria-current]=\"(pageNumber === page ? 'page' : null)\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                       [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\" [attr.tabindex]=\"disabled ? '-1' : null\"\n          [attr.aria-disabled]=\"disabled ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                       [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  @ContentChild(NgbPaginationEllipsis, {static: false}) tplEllipsis: NgbPaginationEllipsis;\n  @ContentChild(NgbPaginationFirst, {static: false}) tplFirst: NgbPaginationFirst;\n  @ContentChild(NgbPaginationLast, {static: false}) tplLast: NgbPaginationLast;\n  @ContentChild(NgbPaginationNext, {static: false}) tplNext: NgbPaginationNext;\n  @ContentChild(NgbPaginationNumber, {static: false}) tplNumber: NgbPaginationNumber;\n  @ContentChild(NgbPaginationPrevious, {static: false}) tplPrevious: NgbPaginationPrevious;\n\n  /**\n   * If `true`, pagination links will be disabled.\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * If `true`, the \"First\" and \"Last\" page links are shown.\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   * If `true`, the \"Next\" and \"Previous\" page links are shown.\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   * Whether to rotate pages when `maxSize` > number of pages.\n   *\n   * The current page always stays in the middle if `true`.\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  The number of items in your paginated collection.\n   *\n   *  Note, that this is not the number of pages. Page numbers are calculated dynamically based on\n   *  `collectionSize` and `pageSize`. Ex. if you have 100 items in your collection and displaying 20 items per page,\n   *  you'll end up with 5 pages.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  The maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  The current page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Input() page = 1;\n\n  /**\n   *  The number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n   *\n   *  Event payload is the number of the newly selected page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * The pagination display size.\n   *\n   * Bootstrap currently supports small and large sizes.\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  nextDisabled(): boolean { return !this.hasNext() || this.disabled; }\n\n  previousDisabled(): boolean { return !this.hasPrevious() || this.disabled; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        // The first page will always be included. If the displayed range\n        // starts after the third page, then add ellipsis. But if the range\n        // starts on the third page, then add the second page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (start > 2) {\n          this.pages.unshift(-1);\n        } else if (start === 2) {\n          this.pages.unshift(2);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        // The last page will always be included. If the displayed range\n        // ends before the third-last page, then add ellipsis. But if the range\n        // ends on third-last page, then add the second-last page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (end < (this.pageCount - 2)) {\n          this.pages.push(-1);\n        } else if (end === (this.pageCount - 2)) {\n          this.pages.push(this.pageCount - 1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page.\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\n\nexport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\nconst DIRECTIVES = [\n  NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n  NgbPaginationPrevious\n];\n\n@NgModule({declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule]})\nexport class NgbPaginationModule {\n}\n","import {Observable, merge} from 'rxjs';\nimport {share, filter, delay, map} from 'rxjs/operators';\n\nexport class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout'],\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nexport function observeTriggers(renderer: any, nativeElement: any, triggers: Trigger[], isOpenedFn: () => boolean) {\n  return new Observable<boolean>(subscriber => {\n    const listeners = [];\n    const openFn = () => subscriber.next(true);\n    const closeFn = () => subscriber.next(false);\n    const toggleFn = () => subscriber.next(!isOpenedFn());\n\n    triggers.forEach((trigger: Trigger) => {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(\n            renderer.listen(nativeElement, trigger.open, openFn),\n            renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n\n    return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n  });\n}\n\nconst delayOrNoop = <T>(time: number) => time > 0 ? delay<T>(time) : (a: Observable<T>) => a;\n\nexport function triggerDelay(openDelay: number, closeDelay: number, isOpenedFn: () => boolean) {\n  return (input$: Observable<boolean>) => {\n    let pending = null;\n    const filteredInput$ = input$.pipe(\n        map(open => ({open})), filter(event => {\n          const currentlyOpen = isOpenedFn();\n          if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n            pending = event;\n            return true;\n          }\n          if (pending && pending.open !== event.open) {\n            pending = null;\n          }\n          return false;\n        }),\n        share());\n    const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n    const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$)\n        .pipe(\n            filter(event => {\n              if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n              }\n              return false;\n            }),\n            map(event => event.open));\n  };\n}\n\nexport function listenToTriggers(\n    renderer: any, nativeElement: any, triggers: string, isOpenedFn: () => boolean, openFn, closeFn, openDelay = 0,\n    closeDelay = 0) {\n  const parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return () => {};\n  }\n\n  const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n                           .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n                           .subscribe(open => (open ? openFn() : closeFn()));\n\n  return () => subscription.unsubscribe();\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPopoverConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styleUrls: ['./popover.scss']\n})\nexport class NgbPopoverWindow {\n  @Input() title: undefined | string | TemplateRef<any>;\n  @Input() id: string;\n  @Input() popoverClass: string;\n  @Input() context: any;\n\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\n}\n\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n\n  /**\n   * The title of the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() popoverTitle: string | TemplateRef<any>;\n\n  /**\n   * The preferred placement of the popover.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/popover/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   *\n   * Currently only supports `body`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, popover is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n\n  /**\n   * An optional class applied to the popover window element.\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the popover is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter<void>();\n\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter<void>();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-popover');\n      }\n    });\n  }\n\n  /**\n   * Opens the popover.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening popover from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because popover won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the popover from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  close(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({ngbPopover, popoverTitle, disablePopover, popoverClass}: SimpleChanges) {\n    if (popoverClass && this.isOpen()) {\n      this._windowRef.instance.popoverClass = popoverClass.currentValue;\n    }\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {CommonModule} from '@angular/common';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({\n  declarations: [NgbPopover, NgbPopoverWindow],\n  exports: [NgbPopover],\n  imports: [CommonModule],\n  entryComponents: [NgbPopoverWindow]\n})\nexport class NgbPopoverModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  textType: string;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\n      {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n      [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  private _max: number;\n\n  /**\n   * The maximal value to be displayed in the progress bar.\n   *\n   * Should be a positive number. Will default to 100 otherwise.\n   */\n  @Input()\n  set max(max: number) {\n    this._max = !isNumber(max) || max <= 0 ? 100 : max;\n  }\n\n  get max(): number { return this._max; }\n\n  /**\n   * If `true`, the stripes on the progress bar are animated.\n   *\n   * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * If `true`, the progress bars will be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * If `true`, the current percentage will be shown in the `xx%` format.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * Optional text variant type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   *\n   * @since 5.2.0\n   */\n  @Input() textType: string;\n\n  /**\n   * The type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   */\n  @Input() type: string;\n\n  /**\n   * The current value for the progress bar.\n   *\n   * Should be in the `[0, max]` range.\n   */\n  @Input() value = 0;\n\n  /**\n   * The height of the progress bar.\n   *\n   * Accepts any valid CSS height values, ex. `\"2rem\"`\n   */\n  @Input() height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.textType = config.textType;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * The context for the custom star display template defined in the `starTemplate`.\n */\nexport interface StarTemplateContext {\n  /**\n   * The star fill percentage, an integer in the `[0, 100]` range.\n   */\n  fill: number;\n\n  /**\n   * Index of the star, starts with `0`.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'd-inline-flex',\n    '[tabindex]': 'disabled ? -1 : 0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * The maximal rating that can be given.\n   */\n  @Input() max: number;\n\n  /**\n   * The current rating. Could be a decimal value like `3.75`.\n   */\n  @Input() rate: number;\n\n  /**\n   * If `true`, the rating can't be changed.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * The template to override the way each star is displayed.\n   *\n   * Alternatively put an `<ng-template>` as the only child of your `<ngb-rating>` element\n   */\n  @Input() starTemplate: TemplateRef<StarTemplateContext>;\n  @ContentChild(TemplateRef, {static: false}) starTemplateFromContent: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event emitted when the user is hovering over a given rating.\n   *\n   * Event payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user stops hovering over a given rating.\n   *\n   * Event payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user selects a new rating.\n   *\n   * Event payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) {\n    if (!this.readonly && !this.disabled) {\n      this.update(this.resettable && this.rate === value ? 0 : value);\n    }\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n      case Key.ArrowLeft:\n        this.update(this.rate - 1);\n        break;\n      case Key.ArrowUp:\n      case Key.ArrowRight:\n        this.update(this.rate + 1);\n        break;\n      case Key.Home:\n        this.update(0);\n        break;\n      case Key.End:\n        this.update(this.max);\n        break;\n      default:\n        return;\n    }\n\n    // note 'return' in default case\n    event.preventDefault();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return parseInt((diff * 100).toFixed(2), 10);\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  type: 'tabs' | 'pills' = 'tabs';\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet nextId = 0;\n\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n */\n@Directive({selector: 'ng-template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive to wrap content to be displayed in a tab.\n */\n@Directive({selector: 'ng-template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab implements AfterContentChecked {\n  /**\n   * The tab identifier.\n   *\n   * Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id = `ngb-tab-${nextId++}`;\n\n  /**\n   * The tab title.\n   *\n   * Use the [`NgbTabTitle`](#/components/tabset/api#NgbTabTitle) directive for non-string titles.\n   */\n  @Input() title: string;\n\n  /**\n   * If `true`, the current tab is disabled and can't be toggled.\n   */\n  @Input() disabled = false;\n\n  titleTpl: NgbTabTitle | null;\n  contentTpl: NgbTabContent | null;\n\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before the tab change.\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * The id of the currently active tab.\n   */\n  activeId: string;\n\n  /**\n   * The id of the newly selected tab.\n   */\n  nextId: string;\n\n  /**\n   * Calling this function will prevent tab switching.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-selected]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  justifyClass: string;\n\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * The identifier of the tab that should be opened **initially**.\n   *\n   * For subsequent tab switches use the `.select()` method and the `(tabChange)` event.\n   */\n  @Input() activeId: string;\n\n  /**\n   * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * The horizontal alignment of the tabs with flexbox utilities.\n   */\n  @Input()\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\n    if (className === 'fill' || className === 'justified') {\n      this.justifyClass = `nav-${className}`;\n    } else {\n      this.justifyClass = `justify-content-${className}`;\n    }\n  }\n\n  /**\n   * The orientation of the tabset.\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Type of navigation to be used for tabs.\n   *\n   * Currently Bootstrap supports only `\"tabs\"` and `\"pills\"`.\n   *\n   * Since `3.0.0` can also be an arbitrary string (ex. for custom themes).\n   */\n  @Input() type: 'tabs' | 'pills' | string;\n\n  /**\n   * A tab change event emitted right before the tab change happens.\n   *\n   * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n   */\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\n\n  constructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n\n  /**\n   * Selects the tab with the given id and shows its associated content panel.\n   *\n   * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n   * hidden depending on the `destroyOnHide` value.\n   */\n  select(tabId: string) {\n    let selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgbNavModule} from '../nav/nav.module';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle} from './tabset';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule, NgbNavModule]})\nexport class NgbTabsetModule {\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts a user-model time of type `T` to an `NgbTimeStruct` for internal use.\n   */\n  abstract fromModel(value: T): NgbTimeStruct;\n\n  /**\n   * Converts an internal `NgbTimeStruct` time to a user-model time of type `T`.\n   */\n  abstract toModel(time: NgbTimeStruct): T;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayPeriods, TranslationWidth} from '@angular/common';\n\nexport function NGB_TIMEPICKER_I18N_FACTORY(locale) {\n  return new NgbTimepickerI18nDefault(locale);\n}\n\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbTimepickerI18n {\n  /**\n   * Returns the name for the period before midday.\n   */\n  abstract getMorningPeriod(): string;\n\n  /**\n   * Returns the name for the period after midday.\n   */\n  abstract getAfternoonPeriod(): string;\n}\n\n@Injectable()\nexport class NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n  private _periods: [string, string];\n\n  constructor(@Inject(LOCALE_ID) locale: string) {\n    super();\n\n    this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n  }\n\n  getMorningPeriod(): string { return this._periods[0]; }\n\n  getAfternoonPeriod(): string { return this._periods[1]; }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  forwardRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isInteger, isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\nimport {NgbTimepickerI18n} from './timepicker-i18n';\n\nconst FILTER_REGEX = /[^0-9]/g;\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./timepicker.scss'],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\"\n            [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  private _hourStep: number;\n  private _minuteStep: number;\n  private _secondStep: number;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * If `true`, the spinners above and below inputs are visible.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * If `true`, it is possible to select seconds.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n  @Input()\n  set hourStep(step: number) {\n    this._hourStep = isInteger(step) ? step : this._config.hourStep;\n  }\n\n  get hourStep(): number { return this._hourStep; }\n\n  /**\n   * The number of minutes to add/subtract when clicking minute spinners.\n   */\n  @Input()\n  set minuteStep(step: number) {\n    this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n  }\n\n  get minuteStep(): number { return this._minuteStep; }\n\n  /**\n   * The number of seconds to add/subtract when clicking second spinners.\n   */\n  @Input()\n  set secondStep(step: number) {\n    this._secondStep = isInteger(step) ? step : this._config.secondStep;\n  }\n\n  get secondStep(): number { return this._secondStep; }\n\n  /**\n   * If `true`, the timepicker is readonly and can't be changed.\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * The size of inputs and buttons.\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(\n      private readonly _config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>,\n      private _cd: ChangeDetectorRef, public i18n: NgbTimepickerI18n) {\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n    this._cd.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatInput(input: HTMLInputElement) { input.value = input.value.replace(FILTER_REGEX, ''); }\n\n  formatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value: number) { return padNumber(value); }\n\n  get isSmallSize(): boolean { return this.size === 'small'; }\n\n  get isLargeSize(): boolean { return this.size === 'large'; }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\nexport {NgbTimepickerI18n} from './timepicker-i18n';\n\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\nexport class NgbTimepickerModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Interface used to type all toast config options. See `NgbToastConfig`.\n *\n * @since 5.0.0\n */\nexport interface NgbToastOptions {\n  /**\n   * Specify if the toast component should emit the `hide()` output\n   * after a certain `delay` in ms.\n   */\n  autohide?: boolean;\n\n  /**\n   * Delay in ms after which the `hide()` output should be emitted.\n   */\n  delay?: number;\n\n  /**\n   * Type of aria-live attribute to be used.\n   *\n   * Could be one of these 2 values (as string):\n   * - `polite` (default)\n   * - `alert`\n   */\n  ariaLive?: 'polite' | 'alert';\n}\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbToastConfig implements NgbToastOptions {\n  autohide = true;\n  delay = 500;\n  ariaLive: 'polite' | 'alert' = 'polite';\n}\n","import {\n  AfterContentInit,\n  Attribute,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {NgbToastConfig} from './toast-config';\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\n@Directive({selector: '[ngbToastHeader]'})\nexport class NgbToastHeader {\n}\n\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\n@Component({\n  selector: 'ngb-toast',\n  exportAs: 'ngbToast',\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'role': 'alert',\n    '[attr.aria-live]': 'ariaLive',\n    'aria-atomic': 'true',\n    '[class.toast]': 'true',\n    '[class.show]': 'true',\n  },\n  template: `\n    <ng-template #headerTpl>\n      <strong class=\"mr-auto\">{{header}}</strong>\n    </ng-template>\n    <ng-template [ngIf]=\"contentHeaderTpl || header\">\n      <div class=\"toast-header\">\n        <ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.toast.close-aria\" (click)=\"hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    </ng-template>\n    <div class=\"toast-body\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrls: ['./toast.scss']\n})\nexport class NgbToast implements AfterContentInit,\n    OnChanges {\n  private _timeoutID;\n\n  /**\n   * Delay after which the toast will hide (ms).\n   * default: `500` (ms) (inherited from NgbToastConfig)\n   */\n  @Input() delay: number;\n\n  /**\n   * Auto hide the toast after a delay in ms.\n   * default: `true` (inherited from NgbToastConfig)\n   */\n  @Input() autohide: boolean;\n\n  /**\n   * Text to be used as toast's header.\n   * Ignored if a ContentChild template is specified at the same time.\n   */\n  @Input() header: string;\n\n  /**\n   * A template like `<ng-template ngbToastHeader></ng-template>` can be\n   * used in the projected content to allow markup usage.\n   */\n  @ContentChild(NgbToastHeader, {read: TemplateRef, static: true}) contentHeaderTpl: TemplateRef<any>| null = null;\n\n  /**\n   * An event fired immediately when toast's `hide()` method has been called.\n   * It can only occur in 2 different scenarios:\n   * - `autohide` timeout fires\n   * - user clicks on a closing cross (&times)\n   *\n   * Additionally this output is purely informative. The toast won't disappear. It's up to the user to take care of\n   * that.\n   */\n  @Output('hide') hideOutput = new EventEmitter<void>();\n\n  constructor(@Attribute('aria-live') public ariaLive: string, config: NgbToastConfig) {\n    if (this.ariaLive == null) {\n      this.ariaLive = config.ariaLive;\n    }\n    this.delay = config.delay;\n    this.autohide = config.autohide;\n  }\n\n  ngAfterContentInit() { this._init(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('autohide' in changes) {\n      this._clearTimeout();\n      this._init();\n    }\n  }\n\n  hide() {\n    this._clearTimeout();\n    this.hideOutput.emit();\n  }\n\n  private _init() {\n    if (this.autohide && !this._timeoutID) {\n      this._timeoutID = setTimeout(() => this.hide(), this.delay);\n    }\n  }\n\n  private _clearTimeout() {\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {NgbToast, NgbToastHeader} from './toast';\n\nexport {NgbToast, NgbToastHeader} from './toast';\nexport {NgbToastConfig, NgbToastOptions} from './toast-config';\n\n@NgModule({declarations: [NgbToast, NgbToastHeader], imports: [CommonModule], exports: [NgbToast, NgbToastHeader]})\nexport class NgbToastModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTooltipConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'hover focus';\n  container: string;\n  disableTooltip = false;\n  tooltipClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"tooltip show\" + (tooltipClass ? \" \" + tooltipClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styleUrls: ['./tooltip.scss']\n})\nexport class NgbTooltipWindow {\n  @Input() id: string;\n  @Input() tooltipClass: string;\n}\n\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The preferred placement of the tooltip.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, tooltip is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n\n  /**\n   * An optional class applied to the tooltip window element.\n   *\n   * @since 3.2.0\n   */\n  @Input() tooltipClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the tooltip is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-tooltip');\n      }\n    });\n  }\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because tooltip won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the tooltip from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({tooltipClass}: SimpleChanges) {\n    if (tooltipClass && this.isOpen()) {\n      this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styleUrls: ['./highlight.scss']\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  /**\n   * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n   */\n  @Input() highlightClass = 'ngb-highlight';\n\n  /**\n   * The text highlighting is added to.\n   *\n   * If the `term` is found inside this text, it will be highlighted.\n   * If the `term` contains array then all the items from it will be highlighted inside the text.\n   */\n  @Input() result: string;\n\n  /**\n   * The term or array of terms to be highlighted.\n   * Since version `v4.2.0` term could be a `string[]`\n   */\n  @Input() term: string | readonly string[];\n\n  ngOnChanges(changes: SimpleChanges) {\n    const result = toString(this.result);\n\n    const terms = Array.isArray(this.term) ? this.term : [this.term];\n    const escapedTerms = terms.map(term => regExpEscape(toString(term))).filter(term => term);\n\n    this.parts = escapedTerms.length ? result.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewEncapsulation} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * The context for the typeahead result template in case you want to override the default one.\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result item.\n   */\n  result: any;\n\n  /**\n   * Search term from the `<input>` used to get current result.\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  encapsulation: ViewEncapsulation.None,\n  host: {'(mousedown)': '$event.preventDefault()', 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead window. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\n  return 100;\n}\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable({providedIn: 'root'})\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    element.textContent = '';\n    const setText = () => element.textContent = message;\n    if (delay === null) {\n      setText();\n    } else {\n      setTimeout(setText, delay);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ApplicationRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {BehaviorSubject, fromEvent, Observable, Subject, Subscription} from 'rxjs';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nimport {Live} from '../util/accessibility/live';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\nimport {PopupService} from '../util/popup';\nimport {PlacementArray, positionElements} from '../util/positioning';\nimport {isDefined, toString} from '../util/util';\n\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\n\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * An event emitted right before an item is selected from the result list.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * The item from the result list about to be selected.\n   */\n  item: any;\n\n  /**\n   * Calling this function will prevent item selection from happening.\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _closed$ = new Subject();\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n  /**\n   * The value for the `autocomplete` attribute for the `<input>` element.\n   *\n   * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the typeahead popup will be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, model values will not be restricted only to items selected from the popup.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * If `true`, the first item in the result list will always stay focused while typing.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the `<input>` field.\n   *\n   * It is called when the user selects something in the popup or the model value changes, so the input needs to\n   * be updated.\n   */\n  @Input() inputFormatter: (item: any) => string;\n\n  /**\n   * The function that converts a stream of text values from the `<input>` element to the stream of the array of items\n   * to display in the typeahead popup.\n   *\n   * If the resulting observable emits a non-empty array - the popup will be shown. If it emits an empty array - the\n   * popup will be closed.\n   *\n   * See the [basic example](#/components/typeahead/examples#basic) for more details.\n   *\n   * Note that the `this` argument is `undefined` so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<readonly any[]>;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the popup.\n   *\n   * Must be provided, if your `ngbTypeahead` returns something other than `Observable<string[]>`.\n   *\n   * Alternatively for more complex markup in the popup you should use `resultTemplate`.\n   */\n  @Input() resultFormatter: (item: any) => string;\n\n  /**\n   * The template to override the way resulting items are displayed in the popup.\n   *\n   * See the [ResultTemplateContext](#/components/typeahead/api#ResultTemplateContext) for the template context.\n   *\n   * Also see the [template for results demo](#/components/typeahead/examples#template) for more details.\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * If `true`, will show the hint in the `<input>` when an item in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /**\n   * The preferred placement of the typeahead.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted right before an item is selected from the result list.\n   *\n   * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _changeDetector: ChangeDetectorRef, applicationRef: ApplicationRef) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = this.showHint ? value : null;\n      this._onChange(this.editable ? value : undefined);\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => results$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) {\n    this._writeInputValue(this._formatItemForInput(value));\n    if (this.showHint) {\n      this._inputValueBackup = value;\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._resubscribeTypeahead.next(null);\n      this._closePopup();\n      if (this.showHint && this._inputValueBackup !== null) {\n        this._writeInputValue(this._inputValueBackup);\n      }\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n        event.preventDefault();\n        this._windowRef.instance.next();\n        this._showHint();\n        break;\n      case Key.ArrowUp:\n        event.preventDefault();\n        this._windowRef.instance.prev();\n        this._showHint();\n        break;\n      case Key.Enter:\n      case Key.Tab:\n        const result = this._windowRef.instance.getActive();\n        if (isDefined(result)) {\n          event.preventDefault();\n          event.stopPropagation();\n          this._selectResult(result);\n        }\n        this._closePopup();\n        break;\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._changeDetector.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$,\n          [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n    }\n  }\n\n  private _closePopup() {\n    this._closed$.next();\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this._writeInputValue(formattedVal);\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<readonly any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n\n      // live announcer\n      const count = results ? results.length : 0;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead} from './typeahead';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbAccordionModule} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {NgbModalModule} from './modal/modal.module';\nimport {NgbNavModule} from './nav/nav.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbToastModule} from './toast/toast.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule} from './typeahead/typeahead.module';\n\n\n\nexport {\n  NgbAccordion,\n  NgbAccordionConfig,\n  NgbAccordionModule,\n  NgbPanel,\n  NgbPanelChangeEvent,\n  NgbPanelContent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelTitle,\n  NgbPanelToggle\n} from './accordion/accordion.module';\nexport {NgbAlert, NgbAlertConfig, NgbAlertModule} from './alert/alert.module';\nexport {NgbButtonLabel, NgbButtonsModule, NgbCheckBox, NgbRadio, NgbRadioGroup} from './buttons/buttons.module';\nexport {\n  NgbCarousel,\n  NgbCarouselConfig,\n  NgbCarouselModule,\n  NgbSlide,\n  NgbSlideEvent,\n  NgbSlideEventDirection,\n  NgbSlideEventSource\n} from './carousel/carousel.module';\nexport {NgbCollapse, NgbCollapseModule} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbCalendarGregorian,\n  NgbCalendarHebrew,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbCalendarPersian,\n  NgbDate,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDateNativeUTCAdapter,\n  NgbDateParserFormatter,\n  NgbDatepicker,\n  NgbDatepickerConfig,\n  NgbInputDatepickerConfig,\n  NgbDatepickerContent,\n  NgbDatepickerI18n,\n  NgbDatepickerI18nHebrew,\n  NgbDatepickerKeyboardService,\n  NgbDatepickerModule,\n  NgbDatepickerMonth,\n  NgbDatepickerNavigateEvent,\n  NgbDatepickerState,\n  NgbDateStruct,\n  NgbInputDatepicker,\n  NgbPeriod\n} from './datepicker/datepicker.module';\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownConfig,\n  NgbDropdownItem,\n  NgbDropdownMenu,\n  NgbDropdownModule,\n  NgbDropdownToggle,\n  NgbNavbar\n} from './dropdown/dropdown.module';\nexport {\n  ModalDismissReasons,\n  NgbActiveModal,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalModule,\n  NgbModalOptions,\n  NgbModalRef\n} from './modal/modal.module';\nexport {\n  NgbNavChangeEvent,\n  NgbNavConfig,\n  NgbNav,\n  NgbNavContent,\n  NgbNavContentContext,\n  NgbNavItem,\n  NgbNavLink,\n  NgbNavModule,\n  NgbNavOutlet\n} from './nav/nav.module';\nexport {\n  NgbPagination,\n  NgbPaginationConfig,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationModule,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination/pagination.module';\nexport {NgbPopover, NgbPopoverConfig, NgbPopoverModule} from './popover/popover.module';\nexport {NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule} from './progressbar/progressbar.module';\nexport {NgbRating, NgbRatingConfig, NgbRatingModule} from './rating/rating.module';\nexport {\n  NgbTab,\n  NgbTabChangeEvent,\n  NgbTabContent,\n  NgbTabset,\n  NgbTabsetConfig,\n  NgbTabsetModule,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {\n  NgbTimeAdapter,\n  NgbTimepickerI18n,\n  NgbTimepicker,\n  NgbTimepickerConfig,\n  NgbTimepickerModule,\n  NgbTimeStruct\n} from './timepicker/timepicker.module';\nexport {NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule} from './toast/toast.module';\nexport {NgbTooltip, NgbTooltipConfig, NgbTooltipModule} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeahead,\n  NgbTypeaheadConfig,\n  NgbTypeaheadModule,\n  NgbTypeaheadSelectItemEvent\n} from './typeahead/typeahead.module';\nexport {Placement} from './util/positioning';\n\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule,\n  NgbRatingModule, NgbTabsetModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule\n];\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n}\n"]}