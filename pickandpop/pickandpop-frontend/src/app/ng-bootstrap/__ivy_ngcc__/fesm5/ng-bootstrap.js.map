{"version":3,"file":"ng-bootstrap.js","sources":["ng:/@ng-bootstrap/ng-bootstrap/util/util.ts","ng:/@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","ng:/@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","ng:/@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","ng:/@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","ng:/@ng-bootstrap/ng-bootstrap/alert/alert.ts","ng:/@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","ng:/@ng-bootstrap/ng-bootstrap/buttons/label.ts","ng:/@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","ng:/@ng-bootstrap/ng-bootstrap/buttons/radio.ts","ng:/@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","ng:/@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","ng:/@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","ng:/@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","ng:/@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","ng:/@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","ng:/@ng-bootstrap/ng-bootstrap/util/key.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keyboard-service.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","ng:/@ng-bootstrap/ng-bootstrap/util/autoclose.ts","ng:/@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","ng:/@ng-bootstrap/ng-bootstrap/util/positioning.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input-config.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/jalali/jalali.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/jalali/ngb-calendar-persian.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hebrew/hebrew.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hebrew/ngb-calendar-hebrew.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hebrew/datepicker-i18n-hebrew.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-utc-adapter.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","ng:/@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","ng:/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","ng:/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-config.ts","ng:/@ng-bootstrap/ng-bootstrap/util/popup.ts","ng:/@ng-bootstrap/ng-bootstrap/util/scrollbar.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","ng:/@ng-bootstrap/ng-bootstrap/nav/nav-config.ts","ng:/@ng-bootstrap/ng-bootstrap/nav/nav.ts","ng:/@ng-bootstrap/ng-bootstrap/nav/nav-outlet.ts","ng:/@ng-bootstrap/ng-bootstrap/nav/nav.module.ts","ng:/@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","ng:/@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","ng:/@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","ng:/@ng-bootstrap/ng-bootstrap/util/triggers.ts","ng:/@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","ng:/@ng-bootstrap/ng-bootstrap/popover/popover.ts","ng:/@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","ng:/@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","ng:/@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","ng:/@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","ng:/@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","ng:/@ng-bootstrap/ng-bootstrap/rating/rating.ts","ng:/@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","ng:/@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","ng:/@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","ng:/@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker-i18n.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","ng:/@ng-bootstrap/ng-bootstrap/toast/toast-config.ts","ng:/@ng-bootstrap/ng-bootstrap/toast/toast.ts","ng:/@ng-bootstrap/ng-bootstrap/toast/toast.module.ts","ng:/@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","ng:/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","ng:/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","ng:/@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","ng:/@ng-bootstrap/ng-bootstrap/index.ts"],"names":["nextId","tslib_1.__extends","tslib_1.__values","NGB_DATEPICKER_VALUE_ACCESSOR","mod","GREGORIAN_EPOCH","isGregorianLeapYear","fromGregorian","toGregorian"],"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","sourcesContent":["export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nexport function hasClassName(element: any, className: string): boolean {\n  return element && element.className && element.className.split &&\n      element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n  // Polyfill for ie10+\n\n  if (!Element.prototype.matches) {\n    // IE uses the non-standard name: msMatchesSelector\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  Element.prototype.closest = function(s: string) {\n    let el = this;\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n\nexport function closest(element: HTMLElement, selector): HTMLElement {\n  if (!selector) {\n    return null;\n  }\n\n  return element.closest(selector);\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet nextId = 0;\n\n/**\n * The context for the [NgbPanelHeader](#/components/accordion/api#NgbPanelHeader) template\n *\n * @since 4.1.0\n */\nexport interface NgbPanelHeaderContext {\n  /**\n   * `True` if current panel is opened\n   */\n  opened: boolean;\n}\n\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPanelHeader]'})\nexport class NgbPanelHeader {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps the accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  If `true`, the panel is disabled an can't be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel that must be unique on the page.\n   *\n   *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  isOpen = false;\n\n  /**\n   *  The panel title.\n   *\n   *  You can alternatively use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to set panel title.\n   */\n  @Input() title: string;\n\n  /**\n   * Type of the current panel.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * An optional class applied to the accordion card element that wraps both panel title and content.\n   *\n   * @since 5.3.0\n   */\n  @Input() cardClass: string;\n\n  titleTpl: NgbPanelTitle | null;\n  headerTpl: NgbPanelHeader | null;\n  contentTpl: NgbPanelContent | null;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelHeader, {descendants: false}) headerTpls: QueryList<NgbPanelHeader>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.headerTpl = this.headerTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * An event emitted right before toggling an accordion panel.\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * The id of the accordion panel that is being toggled.\n   */\n  panelId: string;\n\n  /**\n   * The next state of the panel.\n   *\n   * `true` if it will be opened, `false` if closed.\n   */\n  nextState: boolean;\n\n  /**\n   * Calling this function will prevent panel toggling.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  encapsulation: ViewEncapsulation.None,\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"btn btn-link\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div [class]=\"'card ' + (panel.cardClass || '')\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel ids that should be opened **initially**.\n   *\n   * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n   * the `(panelChange)` event.\n   */\n  @Input() activeIds: string | readonly string[] = [];\n\n  /**\n   *  If `true`, only one panel could be opened at a time.\n   *\n   *  Opening a new panel will close others.\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * Type of panels.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * Event emitted right before the panel toggle happens.\n   *\n   * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  constructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\n\n  /**\n   * Expands a panel with a given id.\n   *\n   * Has no effect if the panel is already expanded or disabled.\n   */\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\n\n  /**\n   * Expands all panels, if `[closeOthers]` is `false`.\n   *\n   * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n   */\n  expandAll(): void {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n\n  /**\n   * Collapses a panel with the given id.\n   *\n   * Has no effect if the panel is already collapsed or disabled.\n   */\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\n\n  /**\n   * Collapses all opened panels.\n   */\n  collapseAll() {\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n  }\n\n  /**\n   * Toggles a panel with the given id.\n   *\n   * Has no effect if the panel is disabled.\n   */\n  toggle(panelId: string) {\n    const panel = this._findPanelById(panelId);\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n\n  private _changeOpenState(panel: NgbPanel, nextState: boolean) {\n    if (panel && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n\n  private _closeOthers(panelId: string) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId) {\n        panel.isOpen = false;\n      }\n    });\n  }\n\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId); }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n}\n\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\n@Directive({\n  selector: 'button[ngbPanelToggle]',\n  host: {\n    'type': 'button',\n    '[disabled]': 'panel.disabled',\n    '[class.collapsed]': '!panel.isOpen',\n    '[attr.aria-expanded]': 'panel.isOpen',\n    '[attr.aria-controls]': 'panel.id',\n    '(click)': 'accordion.toggle(panel.id)'\n  }\n})\nexport class NgbPanelToggle {\n  @Input()\n  set ngbPanelToggle(panel: NgbPanel) {\n    if (panel) {\n      this.panel = panel;\n    }\n  }\n\n  constructor(public accordion: NgbAccordion, @Optional() @Host() public panel: NgbPanel) {}\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle} from './accordion';\n\nexport {\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent,\n  NgbPanelChangeEvent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelToggle\n} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES =\n    [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n@Component({\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible'},\n  template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    `,\n  styleUrls: ['./alert.scss']\n})\nexport class NgbAlert implements OnInit,\n    OnChanges {\n  /**\n   * If `true`, alert can be dismissed by the user.\n   *\n   * The close button (Ã) will be displayed and you can be notified\n   * of the event with the `(close)` output.\n   */\n  @Input() dismissible: boolean;\n  /**\n   * Type of the alert.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n  /**\n   * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n   */\n  @Output() close = new EventEmitter<void>();\n\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  closeHandler() { this.close.emit(null); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange = changes['type'];\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {ChangeDetectorRef, Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  checked;\n\n  /**\n   * If `true`, the checkbox button will be disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * The form control value when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * The form control value when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel, private _cd: ChangeDetectorRef) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    this._cd.markForCheck();\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'radiogroup'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * Name of the radio group applied to radio input elements.\n   *\n   * Will be applied to all radio input elements inside the group,\n   * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n   *\n   * If not provided, will be generated in the `ngb-radio-xx` format.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The value for the 'name' property of the input element.\n   *\n   * All inputs of the radio group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * The form control value when current radio button is checked.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * If `true`, current radio button will be disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>, private _cd: ChangeDetectorRef) {\n    this._group.register(this);\n    this.updateDisabled();\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    if (this.value !== value) {\n      this._cd.markForCheck();\n    }\n\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NgbCarouselConfig} from './carousel-config';\n\nimport {BehaviorSubject, combineLatest, NEVER, Subject, timer} from 'rxjs';\nimport {distinctUntilChanged, map, startWith, switchMap, takeUntil} from 'rxjs/operators';\n\nlet nextId = 0;\n\n/**\n * A directive that wraps the individual carousel slide.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Slide id that must be unique for the entire document.\n   *\n   * If not provided, will be generated in the `ngb-slide-xx` format.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(keydown.arrowLeft)': 'keyboard && prev(NgbSlideEventSource.ARROW_LEFT)',\n    '(keydown.arrowRight)': 'keyboard && next(NgbSlideEventSource.ARROW_RIGHT)'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id, NgbSlideEventSource.INDICATOR)\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev(NgbSlideEventSource.ARROW_LEFT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next(NgbSlideEventSource.ARROW_RIGHT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    AfterContentInit, OnDestroy {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n  public NgbSlideEventSource = NgbSlideEventSource;\n\n  private _destroy$ = new Subject<void>();\n  private _interval$ = new BehaviorSubject(0);\n  private _mouseHover$ = new BehaviorSubject(false);\n  private _pauseOnHover$ = new BehaviorSubject(false);\n  private _pause$ = new BehaviorSubject(false);\n  private _wrap$ = new BehaviorSubject(false);\n\n  /**\n   * The slide id that should be displayed **initially**.\n   *\n   * For subsequent interactions use methods `select()`, `next()`, etc. and the `(slide)` output.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n  @Input()\n  set interval(value: number) {\n    this._interval$.next(value);\n  }\n\n  get interval() { return this._interval$.value; }\n\n  /**\n   * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n   */\n  @Input()\n  set wrap(value: boolean) {\n    this._wrap$.next(value);\n  }\n\n  get wrap() { return this._wrap$.value; }\n\n  /**\n   * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * If `true`, will pause slide switching when mouse cursor hovers the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input()\n  set pauseOnHover(value: boolean) {\n    this._pauseOnHover$.next(value);\n  }\n\n  get pauseOnHover() { return this._pauseOnHover$.value; }\n\n  /**\n   * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * If `true`, navigation indicators at the bottom of the slide will be visible.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * An event emitted right after the slide transition is completed.\n   *\n   * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  constructor(\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\n      private _cd: ChangeDetectorRef) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  @HostListener('mouseenter')\n  mouseEnter() {\n    this._mouseHover$.next(true);\n  }\n\n  @HostListener('mouseleave')\n  mouseLeave() {\n    this._mouseHover$.next(false);\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        const hasNextSlide$ = combineLatest(\n                                  this.slide.pipe(map(slideEvent => slideEvent.current), startWith(this.activeId)),\n                                  this._wrap$, this.slides.changes.pipe(startWith(null)))\n                                  .pipe(\n                                      map(([currentSlideId, wrap]) => {\n                                        const slideArr = this.slides.toArray();\n                                        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n                                        return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                                      }),\n                                      distinctUntilChanged());\n        combineLatest(this._pause$, this._pauseOnHover$, this._mouseHover$, this._interval$, hasNextSlide$)\n            .pipe(\n                map(([pause, pauseOnHover, mouseHover, interval, hasNextSlide]) =>\n                        ((pause || (pauseOnHover && mouseHover) || !hasNextSlide) ? 0 : interval)),\n\n                distinctUntilChanged(), switchMap(interval => interval > 0 ? timer(interval, interval) : NEVER),\n                takeUntil(this._destroy$))\n            .subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n      });\n    }\n\n    this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => this._cd.markForCheck());\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n\n  ngOnDestroy() { this._destroy$.next(); }\n\n  /**\n   * Navigates to a slide with the specified identifier.\n   */\n  select(slideId: string, source?: NgbSlideEventSource) {\n    this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n  }\n\n  /**\n   * Navigates to the previous slide.\n   */\n  prev(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n  }\n\n  /**\n   * Navigates to the next slide.\n   */\n  next(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n  }\n\n  /**\n   * Pauses cycling through the slides.\n   */\n  pause() { this._pause$.next(true); }\n\n  /**\n   * Restarts cycling through the slides from left to right.\n   */\n  cycle() { this._pause$.next(false); }\n\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection, source?: NgbSlideEventSource) {\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this.slide.emit(\n          {prev: this.activeId, current: selectedSlide.id, direction: direction, paused: this._pause$.value, source});\n      this.activeId = selectedSlide.id;\n    }\n\n    // we get here after the interval fires or any external API call like next(), prev() or select()\n    this._cd.markForCheck();\n  }\n\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  private _getSlideById(slideId: string): NgbSlide { return this.slides.find(slide => slide.id === slideId); }\n\n  private _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n}\n\n/**\n * A slide change event emitted right after the slide transition is completed.\n */\nexport interface NgbSlideEvent {\n  /**\n   * The previous slide id.\n   */\n  prev: string;\n\n  /**\n   * The current slide id.\n   */\n  current: string;\n\n  /**\n   * The slide event direction.\n   *\n   * Possible values are `'left' | 'right'`.\n   */\n  direction: NgbSlideEventDirection;\n\n  /**\n   * Whether the pause() method was called (and no cycle() call was done afterwards).\n   *\n   * @since 5.1.0\n   */\n  paused: boolean;\n\n  /**\n   * Source triggering the slide change event.\n   *\n   * Possible values are `'timer' | 'arrowLeft' | 'arrowRight' | 'indicator'`\n   *\n   * @since 5.1.0\n   */\n  source?: NgbSlideEventSource;\n}\n\n/**\n * Defines the carousel slide transition direction.\n */\nexport enum NgbSlideEventDirection {\n  LEFT = <any>'left',\n  RIGHT = <any>'right'\n}\n\nexport enum NgbSlideEventSource {\n  TIMER = 'timer',\n  ARROW_LEFT = 'arrowLeft',\n  ARROW_RIGHT = 'arrowRight',\n  INDICATOR = 'indicator'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent, NgbSlideEventDirection, NgbSlideEventSource} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n}\n","import {Directive, Input} from '@angular/core';\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\n@Directive({\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n})\nexport class NgbCollapse {\n  /**\n   * If `true`, will collapse the element or show it otherwise.\n   */\n  @Input('ngbCollapse') collapsed = false;\n}\n","import {NgModule} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n}\n","import {NgbDateStruct} from './ngb-date-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n  /**\n   * The year, for example 2016\n   */\n  year: number;\n\n  /**\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n   */\n  month: number;\n\n  /**\n   * The day of month, starting with 1\n   */\n  day: number;\n\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n  static from(date: NgbDateStruct): NgbDate {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year: number, month: number, day: number) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n\n  /**\n   * Checks if the current date is equal to another date.\n   */\n  equals(other: NgbDateStruct): boolean {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  /**\n   * Checks if the current date is before another date.\n   */\n  before(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  /**\n   * Checks if the current date is after another date.\n   */\n  after(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nexport function fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nexport function toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\nexport abstract class NgbCalendar {\n  /**\n   * Returns the number of days per week.\n   */\n  abstract getDaysPerWeek(): number;\n\n  /**\n   * Returns an array of months per year.\n   *\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n   */\n  abstract getMonths(year?: number): number[];\n\n  /**\n   * Returns the number of weeks per month.\n   */\n  abstract getWeeksPerMonth(): number;\n\n  /**\n   * Returns the weekday number for a given day.\n   *\n   * With the default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekday(date: NgbDate): number;\n\n  /**\n   * Adds a number of years, months or days to a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Subtracts a number of years, months or days from a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Returns the week number for a given week.\n   */\n  abstract getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number): number;\n\n  /**\n   * Returns the today's date.\n   */\n  abstract getToday(): NgbDate;\n\n  /**\n   * Checks if a date is valid in the current calendar.\n   */\n  abstract isValid(date: NgbDate): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n    let checkMonth = true;\n    let expectedMonth = jsDate.getMonth();\n\n    switch (period) {\n      case 'y':\n        jsDate.setFullYear(jsDate.getFullYear() + number);\n        break;\n      case 'm':\n        expectedMonth += number;\n        jsDate.setMonth(expectedMonth);\n        expectedMonth = expectedMonth % 12;\n        if (expectedMonth < 0) {\n          expectedMonth = expectedMonth + 12;\n        }\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        checkMonth = false;\n        break;\n      default:\n        return date;\n    }\n\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n      // this means the destination month has less days than the initial month\n      // let's go back to the end of the previous month:\n      jsDate.setDate(0);\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    // year 0 doesn't exist in Gregorian calendar\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {isDefined} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function isChangedMonth(prev: NgbDate, next: NgbDate) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    !isDefined(date) ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n\n  const length = end - start + 1;\n  const numbers = Array(length);\n  for (let i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n\n  return numbers;\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\n  const nextDate = Object.assign(calendar.getNext(date, 'm'), {day: 1});\n  return maxDate && nextDate.after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\n  const prevDate = Object.assign(calendar.getPrev(date, 'm'), {day: 1});\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                     prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = Object.assign(calendar.getNext(date, 'm', i), {day: 1});\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n  const calendarToday = calendar.getToday();\n\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // today\n      let today = newDate.equals(calendarToday);\n\n      // adding user-provided data to the context\n      let contextUserData =\n          dayTemplateData ? dayTemplateData(newDate, {month: month.number, year: month.year}) : undefined;\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year, disabled,\n        focused: false,\n        selected: false, today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthShortName(month: number, year?: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthFullName(month: number, year?: number): string;\n\n  /**\n   * Returns the value of the `aria-label` attribute for a specific date.\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell.\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\n\n  /**\n   * Returns the textual representation of a week number rendered by datepicker.\n   *\n   * @since 3.0.0\n   */\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\n\n  /**\n   * Returns the textual representation of a year that is rendered in the datepicker year select box.\n   *\n   * @since 3.0.0\n   */\n  getYearNumerals(year: number): string { return `${year}`; }\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n}\n","import {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isChangedMonth,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport interface DatepickerServiceInputs extends\n    Partial<Pick<DatepickerViewModel, 'dayTemplateData' | 'displayMonths' | 'disabled' | 'firstDayOfWeek' |\n                     'focusVisible' | 'markDisabled' | 'maxDate' | 'minDate' | 'navigation' | 'outsideDays'>> {}\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _VALIDATORS:\n      {[K in keyof DatepickerServiceInputs]: (v: DatepickerServiceInputs[K]) => Partial<DatepickerViewModel>} = {\n        dayTemplateData: (dayTemplateData: NgbDayTemplateData) => {\n          if (this._state.dayTemplateData !== dayTemplateData) {\n            return {dayTemplateData};\n          }\n        },\n        displayMonths: (displayMonths: number) => {\n          displayMonths = toInteger(displayMonths);\n          if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n            return {displayMonths};\n          }\n        },\n        disabled: (disabled: boolean) => {\n          if (this._state.disabled !== disabled) {\n            return {disabled};\n          }\n        },\n        firstDayOfWeek: (firstDayOfWeek: number) => {\n          firstDayOfWeek = toInteger(firstDayOfWeek);\n          if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n            return {firstDayOfWeek};\n          }\n        },\n        focusVisible: (focusVisible: boolean) => {\n          if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n            return {focusVisible};\n          }\n        },\n        markDisabled: (markDisabled: NgbMarkDisabled) => {\n          if (this._state.markDisabled !== markDisabled) {\n            return {markDisabled};\n          }\n        },\n        maxDate: (date: NgbDate) => {\n          const maxDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.maxDate, maxDate)) {\n            return {maxDate};\n          }\n        },\n        minDate: (date: NgbDate) => {\n          const minDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.minDate, minDate)) {\n            return {minDate};\n          }\n        },\n        navigation: (navigation: 'select' | 'arrows' | 'none') => {\n          if (this._state.navigation !== navigation) {\n            return {navigation};\n          }\n        },\n        outsideDays: (outsideDays: 'visible' | 'collapsed' | 'hidden') => {\n          if (this._state.outsideDays !== outsideDays) {\n            return {outsideDays};\n          }\n        }\n      };\n\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _dateSelect$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    disabled: false,\n    displayMonths: 1,\n    firstDayOfWeek: 1,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectBoxes: {years: [], months: []},\n    selectedDate: null\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get dateSelect$(): Observable<NgbDate> { return this._dateSelect$.pipe(filter(date => date !== null)); }\n\n  set(options: DatepickerServiceInputs) {\n    let patch = Object.keys(options)\n                    .map(key => this._VALIDATORS[key](options[key]))\n                    .reduce((obj, part) => ({...obj, ...part}), {});\n\n    if (Object.keys(patch).length > 0) {\n      this._nextState(patch);\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date: NgbDate) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (!this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, date))) {\n      this._nextState({firstDate});\n    }\n  }\n\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (!this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._dateSelect$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  getMonth(struct: NgbDateStruct) {\n    for (let month of this._state.months) {\n      if (struct.month === month.number && struct.year === month.year) {\n        return month;\n      }\n    }\n    throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate));\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // terminate early if only focus visibility was changed\n    if ('focusVisible' in patch) {\n      return state;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n          'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\nexport type NgbDayTemplateData = (date: NgbDateStruct, current: {year: number, month: number}) => any;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n};\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n};\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  dayTemplateData?: NgbDayTemplateData,\n  disabled: boolean,\n  displayMonths: number,\n  firstDate?: NgbDate,\n  firstDayOfWeek: number,\n  focusDate?: NgbDate,\n  focusVisible: boolean,\n  lastDate?: NgbDate,\n  markDisabled?: NgbMarkDisabled,\n  maxDate?: NgbDate,\n  minDate?: NgbDate,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate\n};\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  dayTemplateData: (date: NgbDateStruct, current: {year: number, month: number}) => any;\n  footerTemplate: TemplateRef<any>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\nexport abstract class NgbDateAdapter<D> {\n  /**\n   * Converts a user-model date of type `D` to an `NgbDateStruct` for internal use.\n   */\n  abstract fromModel(value: D): NgbDateStruct;\n\n  /**\n   * Converts an internal `NgbDateStruct` date to a user-model date of type `D`.\n   */\n  abstract toModel(date: NgbDateStruct): D;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n}\n","import {fromEvent, merge, Subject} from 'rxjs';\nimport {filter, take, takeUntil} from 'rxjs/operators';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {DatepickerServiceInputs, NgbDatepickerService} from './datepicker-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate, isChangedMonth} from './datepicker-tools';\nimport {hasClassName} from '../util/util';\n\nexport const NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * An event emitted right before the navigation happens and the month displayed by the datepicker changes.\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * The currently displayed month.\n   */\n  current: {year: number, month: number};\n\n  /**\n   * The month we're navigating to.\n   */\n  next: {year: number, month: number};\n\n  /**\n   * Calling this function will prevent navigation from happening.\n   *\n   * @since 4.1.0\n   */\n  preventDefault: () => void;\n}\n\n/**\n * An interface that represents the readonly public state of the datepicker.\n *\n * Accessible via the `datepicker.state` getter\n *\n * @since 5.2.0\n */\nexport interface NgbDatepickerState {\n  /**\n   * The earliest date that can be displayed or selected\n   */\n  readonly minDate: NgbDate;\n\n  /**\n   * The latest date that can be displayed or selected\n   */\n  readonly maxDate: NgbDate;\n\n  /**\n   * The first visible date of currently displayed months\n   */\n  readonly firstDate: NgbDate;\n\n  /**\n   * The last visible date of currently displayed months\n   */\n  readonly lastDate: NgbDate;\n\n  /**\n   * The date currently focused by the datepicker\n   */\n  readonly focusedDate: NgbDate;\n\n  /**\n   * First dates of months currently displayed by the datepicker\n   *\n   * @since 5.3.0\n   */\n  readonly months: NgbDate[];\n}\n\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\n@Directive({selector: 'ng-template[ngbDatepickerContent]'})\nexport class NgbDatepickerContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker.scss'],\n  template: `\n    <ng-template #defaultDayTemplate let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <ng-template #defaultContentTemplate>\n      <div *ngFor=\"let month of model.months; let i = index;\" class=\"ngb-dp-month\">\n        <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\n          {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n        </div>\n        <ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate?.templateRef || defaultContentTemplate\"></ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, ControlValueAccessor {\n  model: DatepickerViewModel;\n\n  @ViewChild('defaultDayTemplate', {static: true}) private _defaultDayTemplate: TemplateRef<DayTemplateContext>;\n  @ViewChild('content', {static: true}) private _contentEl: ElementRef<HTMLElement>;\n  @ContentChild(NgbDatepickerContent, {static: true}) contentTemplate: NgbDatepickerContent;\n\n  private _controlValue: NgbDate;\n  private _destroyed$ = new Subject<void>();\n  private _publicState: NgbDatepickerState = <any>{};\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The latest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * The earliest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * An event emitted right before the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 5.2.0\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * Please use 'dateSelect' output instead, this will be deprecated in version 6.0 due to collision with native\n   * 'select' event.\n   */\n  @Output() select = this.dateSelect;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _service: NgbDatepickerService, private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n,\n      config: NgbDatepickerConfig, cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date => { this.dateSelect.emit(date); });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null;\n\n      // update public state\n      this._publicState = {\n        maxDate: model.maxDate,\n        minDate: model.minDate,\n        firstDate: model.firstDate,\n        lastDate: model.lastDate,\n        focusedDate: model.focusDate,\n        months: model.months.map(viewModel => viewModel.firstDate)\n      };\n\n      let navigationPrevented = false;\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month},\n          preventDefault: () => navigationPrevented = true\n        });\n\n        // can't prevent the very first navigation\n        if (navigationPrevented && oldDate !== null) {\n          this._service.open(oldDate);\n          return;\n        }\n      }\n\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      cd.markForCheck();\n    });\n  }\n\n  /**\n   *  Returns the readonly public state of the datepicker\n   *\n   * @since 5.2.0\n   */\n  get state(): NgbDatepickerState { return this._publicState; }\n\n  /**\n   *  Returns the calendar service used in the specific datepicker instance.\n   *\n   *  @since 5.3.0\n   */\n  get calendar(): NgbCalendar { return this._calendar; }\n\n  /**\n   *  Focuses on given date.\n   */\n  focusDate(date: NgbDateStruct): void { this._service.focus(NgbDate.from(date)); }\n\n  /**\n   *  Selects focused date.\n   */\n  focusSelect(): void { this._service.focusSelect(); }\n\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    this._service.open(NgbDate.from(date ? date.day ? date as NgbDateStruct : {...date, day: 1} : null));\n  }\n\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(() => {\n      const focusIns$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusin');\n      const focusOuts$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusout');\n      const {nativeElement} = this._elementRef;\n\n      // we're changing 'focusVisible' only when entering or leaving months view\n      // and ignoring all focus events where both 'target' and 'related' target are day cells\n      merge(focusIns$, focusOuts$)\n          .pipe(\n              filter(\n                  ({target, relatedTarget}) =>\n                      !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') &&\n                        nativeElement.contains(target as Node) && nativeElement.contains(relatedTarget as Node))),\n              takeUntil(this._destroyed$))\n          .subscribe(({type}) => this._ngZone.run(() => this._service.set({focusVisible: type === 'focusin'})));\n    });\n  }\n\n  ngOnDestroy() { this._destroyed$.next(); }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      const inputs: DatepickerServiceInputs = {};\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n       'outsideDays']\n          .forEach(name => inputs[name] = this[name]);\n      this._service.set(inputs);\n\n      this.navigateTo(this.startDate);\n    }\n    if (!this.dayTemplate) {\n      this.dayTemplate = this._defaultDayTemplate;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const inputs: DatepickerServiceInputs = {};\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n     'outsideDays']\n        .filter(name => name in changes)\n        .forEach(name => inputs[name] = this[name]);\n    this._service.set(inputs);\n\n    if ('startDate' in changes) {\n      const {currentValue, previousValue} = changes.startDate;\n      if (isChangedMonth(previousValue, currentValue)) {\n        this.navigateTo(this.startDate);\n      }\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(disabled: boolean) { this._service.set({disabled}); }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n    this._service.select(this._controlValue);\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDatepicker} from './datepicker';\nimport {Key} from '../util/key';\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerKeyboardService {\n  /**\n   * Processes a keyboard event.\n   */\n  processKey(event: KeyboardEvent, datepicker: NgbDatepicker) {\n    const {state, calendar} = datepicker;\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.PageUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.PageDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.End:\n        datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n        break;\n      case Key.Home:\n        datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n        break;\n      case Key.ArrowLeft:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.ArrowRight:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.Enter:\n      case Key.Space:\n        datepicker.focusSelect();\n        break;\n      default:\n        return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDatepicker} from './datepicker';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\n@Component({\n  selector: 'ngb-datepicker-month',\n  host: {'role': 'grid', '(keydown)': 'onKeyDown($event)'},\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-month.scss'],\n  template: `\n    <div *ngIf=\"datepicker.showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n      <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day); $event.preventDefault()\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [class.ngb-dp-today]=\"day.context.today\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonth {\n  /**\n   * The first date of month to be rendered.\n   *\n   * This month must one of the months present in the\n   * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n   */\n  @Input()\n  set month(month: NgbDateStruct) {\n    this.viewModel = this._service.getMonth(month);\n  }\n\n  viewModel: MonthViewModel;\n\n  constructor(\n      public i18n: NgbDatepickerI18n, public datepicker: NgbDatepicker,\n      private _keyboardService: NgbDatepickerKeyboardService, private _service: NgbDatepickerService) {}\n\n  onKeyDown(event: KeyboardEvent) { this._keyboardService.processKey(event, this.datepicker); }\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.datepicker.onDateSelect(day.date);\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation.scss'],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickPrev($event)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickNext($event)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  onClickPrev(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.PREV);\n  }\n\n  onClickNext(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.NEXT);\n  }\n}\n","import {NgZone} from '@angular/core';\nimport {fromEvent, Observable, race} from 'rxjs';\nimport {delay, filter, map, takeUntil, tap, withLatestFrom} from 'rxjs/operators';\nimport {Key} from './key';\nimport {closest} from './util';\n\nconst isContainedIn = (element: HTMLElement, array?: HTMLElement[]) =>\n    array ? array.some(item => item.contains(element)) : false;\n\nconst matchesSelectorIfAny = (element: HTMLElement, selector?: string) =>\n    !selector || closest(element, selector) != null;\n\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = (() => {\n  const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) ||\n      (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\n  const isAndroid = () => /Android/.test(navigator.userAgent);\n\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})();\n\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = fn => isMobile ? () => setTimeout(() => fn(), 100) : fn;\n\nexport function ngbAutoClose(\n    zone: NgZone, document: any, type: boolean | 'inside' | 'outside', close: () => void, closed$: Observable<any>,\n    insideElements: HTMLElement[], ignoreElements?: HTMLElement[], insideSelector?: string) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(() => {\n\n      const shouldCloseOnClick = (event: MouseEvent) => {\n        const element = event.target as HTMLElement;\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } else /* if (type === true) */ {\n          return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n        }\n      };\n\n      const escapes$ = fromEvent<KeyboardEvent>(document, 'keydown')\n                           .pipe(\n                               takeUntil(closed$),\n                               // tslint:disable-next-line:deprecation\n                               filter(e => e.which === Key.Escape), tap(e => e.preventDefault()));\n\n\n      // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n      const mouseDowns$ =\n          fromEvent<MouseEvent>(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n\n      const closeableClicks$ = fromEvent<MouseEvent>(document, 'mouseup')\n                                   .pipe(\n                                       withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0),\n                                       takeUntil(closed$)) as Observable<MouseEvent>;\n\n\n      race<Event>([escapes$, closeableClicks$]).subscribe(() => zone.run(close));\n    }));\n  }\n}\n","import {NgZone} from '@angular/core';\n\nimport {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\n\nimport {Key} from './key';\n\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: HTMLElement[] =\n      Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR) as NodeListOf<HTMLElement>)\n          .filter(el => el.tabIndex !== -1);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nexport const ngbFocusTrap =\n    (zone: NgZone, element: HTMLElement, stopFocusTrap$: Observable<any>, refocusOnClick = false) => {\n      zone.runOutsideAngular(() => {\n        // last focused element\n        const lastFocusedElement$ =\n            fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n        // 'tab' / 'shift+tab' stream\n        fromEvent<KeyboardEvent>(element, 'keydown')\n            .pipe(\n                takeUntil(stopFocusTrap$),\n                // tslint:disable:deprecation\n                filter(e => e.which === Key.Tab),\n                // tslint:enable:deprecation\n                withLatestFrom(lastFocusedElement$))\n            .subscribe(([tabEvent, focusedElement]) => {\n              const[first, last] = getFocusableBoundaryElements(element);\n\n              if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n                last.focus();\n                tabEvent.preventDefault();\n              }\n\n              if (focusedElement === last && !tabEvent.shiftKey) {\n                first.focus();\n                tabEvent.preventDefault();\n              }\n            });\n\n        // inside click\n        if (refocusOnClick) {\n          fromEvent(element, 'click')\n              .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n              .subscribe(lastFocusedElement => lastFocusedElement.focus());\n        }\n      });\n    };\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n      elPosition = {\n        top: elPosition.top,\n        bottom: elPosition.bottom,\n        left: elPosition.left,\n        right: elPosition.right,\n        height: elPosition.height,\n        width: elPosition.width\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  /*\n    Return false if the element to position is outside the viewport\n  */\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      boolean {\n    const[placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\n\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n\n    const marginTop = parseFloat(targetElStyles.marginTop);\n    const marginBottom = parseFloat(targetElStyles.marginBottom);\n    const marginLeft = parseFloat(targetElStyles.marginLeft);\n    const marginRight = parseFloat(targetElStyles.marginRight);\n\n    let topPosition = 0;\n    let leftPosition = 0;\n\n    switch (placementPrimary) {\n      case 'top':\n        topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\n        break;\n      case 'bottom':\n        topPosition = (hostElPosition.top + hostElPosition.height);\n        break;\n      case 'left':\n        leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\n        break;\n      case 'right':\n        leftPosition = (hostElPosition.left + hostElPosition.width);\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        topPosition = hostElPosition.top;\n        break;\n      case 'bottom':\n        topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        leftPosition = hostElPosition.left;\n        break;\n      case 'right':\n        leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\n        } else {\n          topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\n        }\n        break;\n    }\n\n    /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n    // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n    targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;\n\n    // Check if the targetElement is inside the viewport\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const html = document.documentElement;\n    const windowHeight = window.innerHeight || html.clientHeight;\n    const windowWidth = window.innerWidth || html.clientWidth;\n\n    return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\n        targetElBCR.bottom <= windowHeight;\n  }\n}\n\nconst placementSeparator = /\\s+/;\nconst positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean, baseClass?: string): Placement {\n  let placementVals: Array<Placement> =\n      Array.isArray(placement) ? placement : placement.split(placementSeparator) as Array<Placement>;\n\n  const allowedPlacements = [\n    'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\n    'right-top', 'right-bottom'\n  ];\n\n  const classList = targetElement.classList;\n  const addClassesToTarget = (targetPlacement: Placement): Array<string> => {\n    const[primary, secondary] = targetPlacement.split('-');\n    const classes = [];\n    if (baseClass) {\n      classes.push(`${baseClass}-${primary}`);\n      if (secondary) {\n        classes.push(`${baseClass}-${primary}-${secondary}`);\n      }\n\n      classes.forEach((classname) => { classList.add(classname); });\n    }\n    return classes;\n  };\n\n  // Remove old placement classes to avoid issues\n  if (baseClass) {\n    allowedPlacements.forEach((placementToRemove) => { classList.remove(`${baseClass}-${placementToRemove}`); });\n  }\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n\n  // Required for transform:\n  const style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  style['will-change'] = 'transform';\n\n  let testPlacement: Placement;\n  let isInViewport = false;\n  for (testPlacement of placementVals) {\n    let addedClasses = addClassesToTarget(testPlacement);\n\n    if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n      isInViewport = true;\n      break;\n    }\n\n    // Remove the baseClasses for further calculation\n    if (baseClass) {\n      addedClasses.forEach((classname) => { classList.remove(classname); });\n    }\n  }\n\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n\n  return testPlacement;\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>| string;\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {Injectable} from '@angular/core';\n\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given `string` to an `NgbDateStruct`.\n   *\n   * Implementations should try their best to provide a result, even\n   * partial. They must return `null` if the value can't be parsed.\n   */\n  abstract parse(value: string): NgbDateStruct;\n\n  /**\n   * Formats the given `NgbDateStruct` to a `string`.\n   *\n   * Implementations should return an empty string if the given date is `null`,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   */\n  abstract format(date: NgbDateStruct): string;\n}\n\n@Injectable()\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbInputDatepickerConfig extends NgbDatepickerConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  container: null | 'body';\n  positionTarget: string | HTMLElement;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  restoreFocus: true | HTMLElement | string = true;\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator} from '@angular/forms';\n\nimport {ngbAutoClose} from '../util/autoclose';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {PlacementArray, positionElements} from '../util/positioning';\n\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbInputDatepickerConfig} from './datepicker-input-config';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {isString} from '../util/util';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(focus)': 'onFocus()',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [\n    NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR,\n    {provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig}\n  ],\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  private _cRef: ComponentRef<NgbDatepicker> = null;\n  private _disabled = false;\n  private _elWithFocus = null;\n  private _model: NgbDate;\n  private _inputValue: string;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * * `true` - the popup will close on both date selection and outside click.\n   * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n   * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The earliest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * The latest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * The preferred placement of the datepicker popup.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * If `true`, when closing datepicker will focus element that was focused before datepicker was opened.\n   *\n   * Alternatively you could provide a selector or an `HTMLElement` to focus. If the element doesn't exist or invalid,\n   * we'll fallback to focus document body.\n   *\n   * @since 5.2.0\n   */\n  @Input() restoreFocus: true | string | HTMLElement;\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * A css selector or html element specifying the element the datepicker popup should be positioned against.\n   *\n   * By default the input is used as a target.\n   *\n   * @since 4.2.0\n   */\n  @Input() positionTarget: string | HTMLElement;\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * Event emitted right after the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event fired after closing datepicker window.\n   *\n   * @since 4.2.0\n   */\n  @Output() closed = new EventEmitter<void>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      private _ngZone: NgZone, private _calendar: NgbCalendar, private _dateAdapter: NgbDateAdapter<any>,\n      @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      config: NgbInputDatepickerConfig) {\n    ['autoClose', 'container', 'positionTarget', 'placement'].forEach(input => this[input] = config[input]);\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => this._updatePopupPosition());\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    const value = c.value;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    if (!this._calendar.isValid(ngbDate)) {\n      return {'ngbDate': {invalid: c.value}};\n    }\n\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {requiredBefore: this.minDate}};\n    }\n\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {requiredAfter: this.maxDate}};\n    }\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n    }\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker popup.\n   *\n   * If the related form control contains a valid date, the corresponding month will be opened.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n        this._onTouched();\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      this._elWithFocus = this._document.activeElement;\n      ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n      this._cRef.instance.focus();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.closed, [],\n          [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n      this.closed.emit();\n      this._changeDetector.markForCheck();\n\n      // restore focus\n      let elementToFocus = this._elWithFocus;\n      if (isString(this.restoreFocus)) {\n        elementToFocus = this._document.querySelector(this.restoreFocus);\n      } else if (this.restoreFocus !== undefined) {\n        elementToFocus = this.restoreFocus;\n      }\n\n      // in IE document.activeElement can contain an object without 'focus()' sometimes\n      if (elementToFocus && elementToFocus['focus']) {\n        elementToFocus.focus();\n      } else {\n        this._document.body.focus();\n      }\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup.\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  onFocus() { this._elWithFocus = this._elRef.nativeElement; }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n\n      if (this.isOpen()) {\n        if (changes['minDate']) {\n          this._cRef.instance.minDate = this._dateAdapter.toModel(changes.minDate.currentValue);\n        }\n        if (changes['maxDate']) {\n          this._cRef.instance.maxDate = this._dateAdapter.toModel(changes.maxDate.currentValue);\n        }\n        this._cRef.instance.ngOnChanges(changes);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.addClass(nativeElement, 'show');\n\n    if (this.container === 'body') {\n      this._renderer.addClass(nativeElement, 'ngb-dp-body');\n    }\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n    datepickerInstance.dateSelect.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate) {\n    const value = this._parserFormatter.format(model);\n    this._inputValue = value;\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n\n  private _updatePopupPosition() {\n    if (!this._cRef) {\n      return;\n    }\n\n    let hostElement: HTMLElement;\n    if (isString(this.positionTarget)) {\n      hostElement = this._document.querySelector(this.positionTarget);\n    } else if (this.positionTarget instanceof HTMLElement) {\n      hostElement = this.positionTarget;\n    } else {\n      hostElement = this._elRef.nativeElement;\n    }\n\n    if (this.positionTarget && !hostElement) {\n      throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n    }\n\n    positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-day-view.scss'],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ i18n.getDayNumerals(date) }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  AfterViewChecked,\n  ViewChild,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation-select.scss'],\n  template: `\n    <select #month\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select #year\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect implements AfterViewChecked {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  @ViewChild('month', {static: true, read: ElementRef}) monthSelect: ElementRef;\n  @ViewChild('year', {static: true, read: ElementRef}) yearSelect: ElementRef;\n\n  private _month = -1;\n  private _year = -1;\n\n  constructor(public i18n: NgbDatepickerI18n, private _renderer: Renderer2) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n\n  ngAfterViewChecked() {\n    if (this.date) {\n      if (this.date.month !== this._month) {\n        this._month = this.date.month;\n        this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n      }\n      if (this.date.year !== this._year) {\n        this._year = this.date.year;\n        this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n      }\n    }\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysPerMonth(month: number, year: number): number;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hDate: NgbDate): Date;\n\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this._setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n\n\n  isValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  private _setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  private _setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  private _setYear(date: NgbDate, year: number): NgbDate {\n    date.year = +year;\n    return date;\n  }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate: Date): NgbDate {\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay =\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysPerMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  // Ignores the time part in date1 and date2:\n  const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  const diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n  getDaysPerMonth(hMonth: number, hYear: number): number {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n}\n","import {NgbDate} from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n  date.year = +yearValue;\n  return date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n  return Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n  // Jalali years starting the 33-year rule.\n  let breaks =\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {leap: leap, gy: gYear, march: march};\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\n      ,\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\n      jalaliMonth, numberOfDays;\n\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {isInteger} from '../../util/util';\n\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n        !isNaN(toGregorian(date).getTime());\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year: number): boolean {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year: number): number {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month: number, year: number): number {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year: number): number {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year: number): number {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nexport function isHebrewLeapYear(year: number): boolean {\n  let b = (year * 12 + 17) % 19;\n  return b >= ((b < 0) ? -7 : 12);\n}\n\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nexport function getDaysInHebrewMonth(month: number, year: number): number {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\n  }\n  if (yearType > 1) {\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\n  }\n  return daysInMonth[month - 1];\n}\n\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\n  let numberOfDay = 0;\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\n\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  let hMonth = 1;\n  let hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nexport function hebrewNumerals(numerals: number): string {\n  if (!numerals) {\n    return '';\n  }\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n  const hArray10_19 = [\n    '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n    '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n  ];\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n  const hArray100_900 = [\n    '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n    '\\u05ea\\u05ea\\u05e7'\n  ];\n  const hArray1000_9000 = [\n    '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n    '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n  ];\n  const geresh = '\\u05f3', gershaim = '\\u05f4';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n  while (numerals > 0) {\n    let m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n","import {NgbDate} from '../ngb-date';\nimport {fromJSDate, NgbCalendar, NgbPeriod, toJSDate} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\nimport {\n  fromGregorian,\n  getDayNumberInHebrewYear,\n  getDaysInHebrewMonth,\n  isHebrewLeapYear,\n  toGregorian,\n  setHebrewDay,\n  setHebrewMonth\n} from './hebrew';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths(year?: number) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() { return 6; }\n\n  isValid(date: NgbDate): boolean {\n    let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n    b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n    b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n    return b && !isNaN(toGregorian(date).getTime());\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setHebrewDay(date, number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  /**\n   * @since 3.4.0\n   */\n  toGregorian(date: NgbDate): NgbDate { return fromJSDate(toGregorian(date)); }\n\n  /**\n   * @since 3.4.0\n   */\n  fromGregorian(date: NgbDate): NgbDate { return fromGregorian(toJSDate(date)); }\n}\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\nimport {NgbDateStruct} from '../../index';\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\nimport {Injectable} from '@angular/core';\n\n\nconst WEEKDAYS = ['×©× ×', '×©×××©×', '×¨×××¢×', '××××©×', '×©××©×', '×©××ª', '×¨××©××'];\nconst MONTHS = ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\nconst MONTHS_LEAP =\n    ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨ ××³', '×××¨ ××³', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\n\n  getMonthFullName(month: number, year?: number): string {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n  }\n\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\n\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\n\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  /**\n   * Converts a native `Date` to a `NgbDateStruct`.\n   */\n  fromModel(date: Date): NgbDateStruct {\n    return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n  }\n\n  /**\n   * Converts a `NgbDateStruct` to a native `Date`.\n   */\n  toModel(date: NgbDateStruct): Date {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n                                                                                          null;\n  }\n\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // avoid 30 -> 1930 conversion\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {NgbDateNativeAdapter} from './ngb-date-native-adapter';\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n    // avoid 30 -> 1930 conversion\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker, NgbDatepickerContent} from './datepicker';\nimport {NgbDatepickerMonth} from './datepicker-month';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\n\nexport {NgbDatepicker, NgbDatepickerContent, NgbDatepickerNavigateEvent, NgbDatepickerState} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar, NgbPeriod, NgbCalendarGregorian} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\nexport {NgbDatepickerMonth} from './datepicker-month';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbInputDatepickerConfig} from './datepicker-input-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDate} from './ngb-date';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nexport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect,\n    NgbDatepickerDayView, NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  container: null | 'body';\n}\n","import {\n  ChangeDetectorRef,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  AfterContentInit,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  Optional\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, Subject, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {Placement, PlacementArray, positionElements} from '../util/positioning';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\n\nimport {NgbDropdownConfig} from './dropdown-config';\n\n@Directive({selector: '.navbar'})\nexport class NgbNavbar {\n}\n\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n@Directive({selector: '[ngbDropdownItem]', host: {'class': 'dropdown-item', '[class.disabled]': 'disabled'}})\nexport class NgbDropdownItem {\n  private _disabled = false;\n\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = <any>value === '' || value === true;  // accept an empty attribute as true\n  }\n\n  get disabled(): boolean { return this._disabled; }\n\n  constructor(public elementRef: ElementRef<HTMLElement>) {}\n}\n\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[class.show]': 'dropdown.isOpen()',\n    '[attr.x-placement]': 'placement',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)',\n    '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n    '(keydown.Space)': 'dropdown.onKeyDown($event)'\n  }\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  @ContentChildren(NgbDropdownItem) menuItems: QueryList<NgbDropdownItem>;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown) {}\n}\n\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  getNativeElement() { return this._elementRef.nativeElement; }\n}\n\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'dropdown.toggle()',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n}\n\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements AfterContentInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n  private _bodyContainer: HTMLElement;\n\n  @ContentChild(NgbDropdownMenu, {static: false}) private _menu: NgbDropdownMenu;\n  @ContentChild(NgbDropdownMenu, {read: ElementRef, static: false}) private _menuElement: ElementRef;\n  @ContentChild(NgbDropdownAnchor, {static: false}) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\n   *\n   * * `true` - the dropdown will close on both outside and inside (menu) clicks.\n   * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\n   * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   * Defines whether or not the dropdown menu is opened initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * The preferred placement of the dropdown.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n  * A selector specifying the element the dropdown should be appended to.\n  * Currently only supports \"body\".\n  *\n  * @since 4.1.0\n  */\n  @Input() container: null | 'body';\n\n  /**\n   * Enable or disable the dynamic positioning. The default value is dynamic unless the dropdown is used\n   * inside a Bootstrap navbar. If you need custom placement for a dropdown in a navbar, set it to\n   * dynamic explicitly. See the [positioning of dropdown](#/positioning#dropdown)\n   * and the [navbar demo](/#/components/dropdown/examples#navbar) for more details.\n   *\n   * @since 4.2.0\n   */\n  @Input() display: 'dynamic' | 'static';\n\n  /**\n   * An event fired when the dropdown is opened or closed.\n   *\n   * The event payload is a `boolean`:\n   * * `true` - the dropdown was opened\n   * * `false` - the dropdown was closed\n   */\n  @Output() openChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2,\n      @Optional() ngbNavbar: NgbNavbar) {\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n\n    this.display = ngbNavbar ? 'static' : 'dynamic';\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngAfterContentInit() {\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._applyPlacementClasses();\n      if (this._open) {\n        this._setCloseHandlers();\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.container && this._open) {\n      this._applyContainer(this.container);\n    }\n\n    if (changes.placement && !changes.placement.isFirstChange) {\n      this._applyPlacementClasses();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._applyContainer(this.container);\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n    }\n  }\n\n  private _setCloseHandlers() {\n    const anchor = this._anchor;\n    ngbAutoClose(\n        this._ngZone, this._document, this.autoClose, () => this.close(), this._closed$,\n        this._menu ? [this._menuElement.nativeElement] : [], anchor ? [anchor.getNativeElement()] : [],\n        '.dropdown-item,.dropdown-divider');\n  }\n\n  /**\n   * Closes the dropdown menu.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._resetContainer();\n      this._closed$.next();\n      this.openChange.emit(false);\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this._resetContainer();\n\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    const key = event.which;\n    const itemElements = this._getMenuElements();\n\n    let position = -1;\n    let isEventFromItems = false;\n    let itemElement: HTMLElement = null;\n    const isEventFromToggle = this._isEventFromToggle(event);\n\n    if (!isEventFromToggle && itemElements.length) {\n      itemElements.forEach((item, index) => {\n        if (item.contains(event.target as HTMLElement)) {\n          isEventFromItems = true;\n          itemElement = item;\n        }\n        if (item === this._document.activeElement) {\n          position = index;\n        }\n      });\n    }\n\n    // closing on Enter / Space\n    if (key === Key.Space || key === Key.Enter) {\n      if (isEventFromItems && (this.autoClose === true || this.autoClose === 'inside')) {\n        // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n        // So we have to register a one-time click handler that will fire after any user defined click handlers\n        // to close the dropdown\n        fromEvent(itemElement, 'click').pipe(take(1)).subscribe(() => this.close());\n      }\n      return;\n    }\n\n    // opening / navigating\n    if (isEventFromToggle || isEventFromItems) {\n      this.open();\n\n      if (itemElements.length) {\n        switch (key) {\n          case Key.ArrowDown:\n            position = Math.min(position + 1, itemElements.length - 1);\n            break;\n          case Key.ArrowUp:\n            if (this._isDropup() && position === -1) {\n              position = itemElements.length - 1;\n              break;\n            }\n            position = Math.max(position - 1, 0);\n            break;\n          case Key.Home:\n            position = 0;\n            break;\n          case Key.End:\n            position = itemElements.length - 1;\n            break;\n        }\n        itemElements[position].focus();\n      }\n      event.preventDefault();\n    }\n  }\n\n  private _isDropup(): boolean { return this._elementRef.nativeElement.classList.contains('dropup'); }\n\n  private _isEventFromToggle(event: KeyboardEvent) {\n    return this._anchor.getNativeElement().contains(event.target as HTMLElement);\n  }\n\n  private _getMenuElements(): HTMLElement[] {\n    const menu = this._menu;\n    if (menu == null) {\n      return [];\n    }\n    return menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n  }\n\n  private _positionMenu() {\n    const menu = this._menu;\n    if (this.isOpen() && menu) {\n      this._applyPlacementClasses(\n          this.display === 'dynamic' ?\n              positionElements(\n                  this._anchor.anchorEl, this._bodyContainer || this._menuElement.nativeElement, this.placement,\n                  this.container === 'body') :\n              this._getFirstPlacement(this.placement));\n    }\n  }\n\n  private _getFirstPlacement(placement: PlacementArray): Placement {\n    return Array.isArray(placement) ? placement[0] : placement.split(' ')[0] as Placement;\n  }\n\n  private _resetContainer() {\n    const renderer = this._renderer;\n    const menuElement = this._menuElement;\n    if (menuElement) {\n      const dropdownElement = this._elementRef.nativeElement;\n      const dropdownMenuElement = menuElement.nativeElement;\n\n      renderer.appendChild(dropdownElement, dropdownMenuElement);\n      renderer.removeStyle(dropdownMenuElement, 'position');\n      renderer.removeStyle(dropdownMenuElement, 'transform');\n    }\n    if (this._bodyContainer) {\n      renderer.removeChild(this._document.body, this._bodyContainer);\n      this._bodyContainer = null;\n    }\n  }\n\n  private _applyContainer(container: null | 'body' = null) {\n    this._resetContainer();\n    if (container === 'body') {\n      const renderer = this._renderer;\n      const dropdownMenuElement = this._menuElement.nativeElement;\n      const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n\n      // Override some styles to have the positionning working\n      renderer.setStyle(bodyContainer, 'position', 'absolute');\n      renderer.setStyle(dropdownMenuElement, 'position', 'static');\n      renderer.setStyle(bodyContainer, 'z-index', '1050');\n\n      renderer.appendChild(bodyContainer, dropdownMenuElement);\n      renderer.appendChild(this._document.body, bodyContainer);\n    }\n  }\n\n  private _applyPlacementClasses(placement?: Placement) {\n    const menu = this._menu;\n    if (menu) {\n      if (!placement) {\n        placement = this._getFirstPlacement(this.placement);\n      }\n\n      const renderer = this._renderer;\n      const dropdownElement = this._elementRef.nativeElement;\n\n      // remove the current placement classes\n      renderer.removeClass(dropdownElement, 'dropup');\n      renderer.removeClass(dropdownElement, 'dropdown');\n      menu.placement = this.display === 'static' ? null : placement;\n\n      /*\n      * apply the new placement\n      * in case of top use up-arrow or down-arrow otherwise\n      */\n      const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n      renderer.addClass(dropdownElement, dropdownClass);\n\n      const bodyContainer = this._bodyContainer;\n      if (bodyContainer) {\n        renderer.removeClass(bodyContainer, 'dropup');\n        renderer.removeClass(bodyContainer, 'dropdown');\n        renderer.addClass(bodyContainer, dropdownClass);\n      }\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\n\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES =\n    [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n}\n","import {Injectable, Injector} from '@angular/core';\n\n/**\n * Options available when opening new modal windows with `NgbModal.open()` method.\n */\nexport interface NgbModalOptions {\n  /**\n   * `aria-labelledby` attribute value to set on the modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * If `true`, the backdrop element will be created for a given modal.\n   *\n   * Alternatively, specify `'static'` for a backdrop which doesn't close the modal on click.\n   *\n   * Default value is `true`.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Callback right before the modal will be dismissed.\n   *\n   * If this function returns:\n   * * `false`\n   * * a promise resolved with `false`\n   * * a promise that is rejected\n   *\n   * then the modal won't be dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * If `true`, the modal will be centered vertically.\n   *\n   * Default value is `false`.\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * A selector specifying the element all new modal windows should be appended to.\n   * Since v5.3.0 it is also possible to pass the reference to an `HTMLElement`.\n   *\n   * If not specified, will be `body`.\n   */\n  container?: string | HTMLElement;\n\n  /**\n   * The `Injector` to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * If `true`, the modal will be closed when `Escape` key is pressed\n   *\n   * Default value is `true`.\n   */\n  keyboard?: boolean;\n\n  /**\n   * Scrollable modal content (false by default).\n   *\n   * @since 5.0.0\n   */\n  scrollable?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg' | 'xl' | string;\n\n  /**\n   * A custom class to append to the modal window.\n   */\n  windowClass?: string;\n\n  /**\n   * A custom class to append to the modal backdrop.\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\n@Injectable({providedIn: 'root'})\nexport class NgbModalConfig implements Required<NgbModalOptions> {\n  id: string;\n  ariaLabelledBy: string;\n  backdrop: boolean | 'static' = true;\n  beforeDismiss: () => boolean | Promise<boolean>;\n  centered: boolean;\n  container: string;\n  injector: Injector;\n  keyboard = true;\n  scrollable: boolean;\n  size: 'sm' | 'lg' | 'xl' | string;\n  windowClass: string;\n  backdropClass: string;\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ApplicationRef\n} from '@angular/core';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>;\n  private _contentRef: ContentRef;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver,\n      private _applicationRef: ApplicationRef) {}\n\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), 0, this._injector,\n          this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n\n  close() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._applicationRef.detachView(this._contentRef.viewRef);\n        this._contentRef.viewRef.destroy();\n        this._contentRef = null;\n      }\n    }\n  }\n\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(context);\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\nconst noop = () => {};\n\n\n\n/** Type for the callback used to revert the scrollbar compensation. */\nexport type CompensationReverter = () => void;\n\n\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollBar {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * To be called right before a potential vertical scrollbar would be removed:\n   *\n   * - if there was a scrollbar, adds some compensation padding to the body\n   * to keep the same layout as when the scrollbar is there\n   * - if there was none, there is nothing to do\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  compensate(): CompensationReverter {\n    const width = this._getWidth();\n    return !this._isPresent(width) ? noop : this._adjustBody(width);\n  }\n\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n  private _adjustBody(scrollbarWidth: number): CompensationReverter {\n    const body = this._document.body;\n    const userSetPaddingStyle = body.style.paddingRight;\n    const actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${actualPadding + scrollbarWidth}px`;\n    return () => body.style['padding-right'] = userSetPaddingStyle;\n  }\n\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n  private _isPresent(scrollbarWidth: number): boolean {\n    const rect = this._document.body.getBoundingClientRect();\n    const bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\n    const uncertainty = 0.1 * scrollbarWidth;\n    return bodyToViewportGap >= scrollbarWidth - uncertainty;\n  }\n\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n  private _getWidth(): number {\n    const measurer = this._document.createElement('div');\n    measurer.className = 'modal-scrollbar-measure';\n\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n\n    return width;\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  encapsulation: ViewEncapsulation.None,\n  template: '',\n  host:\n      {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050'}\n})\nexport class NgbModalBackdrop {\n  @Input() backdropClass: string;\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nexport class NgbActiveModal {\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nexport class NgbModalRef {\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n   */\n  get componentInstance(): any {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  /**\n   * The promise that is resolved when the modal is closed and rejected when the modal is dismissed.\n   */\n  result: Promise<any>;\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {fromEvent, Subject} from 'rxjs';\nimport {filter, switchMap, take, takeUntil, tap} from 'rxjs/operators';\n\nimport {getFocusableBoundaryElements} from '../util/focus-trap';\nimport {Key} from '../util/key';\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '[attr.aria-modal]': 'true',\n    '[attr.id]': 'id',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n  },\n  template: `\n    <div #dialog [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\n     (scrollable ? ' modal-dialog-scrollable' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./modal.scss']\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @ViewChild('dialog', {static: true}) private _dialogEl: ElementRef<HTMLElement>;\n\n  @Input() id: string;\n @Input() ariaLabelledBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() scrollable: string;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(\n      @Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>, private _zone: NgZone) {}\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() { this._elWithFocus = this._document.activeElement; }\n\n  ngAfterViewInit() {\n    const {nativeElement} = this._elRef;\n    this._zone.runOutsideAngular(() => {\n\n      fromEvent<KeyboardEvent>(nativeElement, 'keydown')\n          .pipe(\n              takeUntil(this._closed$),\n              // tslint:disable-next-line:deprecation\n              filter(e => e.which === Key.Escape && this.keyboard))\n          .subscribe(event => requestAnimationFrame(() => {\n                       if (!event.defaultPrevented) {\n                         this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n                       }\n                     }));\n\n      // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n      // inside the modal dialog and releasing it outside\n      let preventClose = false;\n      fromEvent<MouseEvent>(this._dialogEl.nativeElement, 'mousedown')\n          .pipe(\n              takeUntil(this._closed$), tap(() => preventClose = false),\n              switchMap(() => fromEvent<MouseEvent>(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))),\n              filter(({target}) => nativeElement === target))\n          .subscribe(() => { preventClose = true; });\n\n      // We're listening to 'click' to dismiss modal on modal window click, except when:\n      // 1. clicking on modal dialog itself\n      // 2. closing was prevented by mousedown/up handlers\n      // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n      fromEvent<MouseEvent>(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({target}) => {\n        if (this.backdrop === true && nativeElement === target && !preventClose) {\n          this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n        }\n        preventClose = false;\n      });\n    });\n\n    if (!nativeElement.contains(document.activeElement)) {\n      const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n      const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n\n      const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    this._zone.runOutsideAngular(() => {\n      setTimeout(() => elementToFocus.focus());\n      this._elWithFocus = null;\n    });\n\n    this._closed$.next();\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  NgZone,\n  RendererFactory2,\n  TemplateRef\n} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {ContentRef} from '../util/popup';\nimport {ScrollBar} from '../util/scrollbar';\nimport {isDefined, isString} from '../util/util';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalOptions} from './modal-config';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nimport {NgbModalWindow} from './modal-window';\n\n@Injectable({providedIn: 'root'})\nexport class NgbModalStack {\n  private _activeWindowCmptHasChanged = new Subject();\n  private _ariaHiddenValues: Map<Element, string> = new Map();\n  private _backdropAttributes = ['backdropClass'];\n  private _modalRefs: NgbModalRef[] = [];\n  private _windowAttributes =\n      ['id,'ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size', 'windowClass'];\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2, private _ngZone: NgZone) {\n    // Trap focus on active WindowCmpt\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n        this._revertAriaHidden();\n        this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ?\n                                                                   this._document.querySelector(options.container) :\n                                                                   this._document.body;\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n    const removeBodyClass = () => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n        this._revertAriaHidden();\n      }\n    };\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef =\n        this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n    this._registerWindowCmpt(windowCmptRef);\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n\n  hasOpenModals(): boolean { return this._modalRefs.length > 0; }\n\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\n      ComponentRef<NgbModalWindow> {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, activeModal: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\n    const context = {\n      $implicit: activeModal,\n      close(result) { activeModal.close(result); },\n      dismiss(reason) { activeModal.dismiss(reason); }\n    };\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, context: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector =\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    const componentNativeEl = componentRef.location.nativeElement;\n    if (options.scrollable) {\n      (componentNativeEl as HTMLElement).classList.add('component-host-scrollable');\n    }\n    this._applicationRef.attachView(componentRef.hostView);\n    // FIXME: we should here get rid of the component nativeElement\n    // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n    return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n  }\n\n  private _setAriaHidden(element: Element) {\n    const parent = element.parentElement;\n    if (parent && element !== this._document.body) {\n      Array.from(parent.children).forEach(sibling => {\n        if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n          this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      });\n\n      this._setAriaHidden(parent);\n    }\n  }\n\n  private _revertAriaHidden() {\n    this._ariaHiddenValues.forEach((value, element) => {\n      if (value) {\n        element.setAttribute('aria-hidden', value);\n      } else {\n        element.removeAttribute('aria-hidden');\n      }\n    });\n    this._ariaHiddenValues.clear();\n  }\n\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n      }\n    };\n    this._modalRefs.push(ngbModalRef);\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\n    this._windowCmpts.push(ngbWindowCmpt);\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\nimport {NgbModalRef} from './modal-ref';\nimport {NgbModalStack} from './modal-stack';\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\n      private _config: NgbModalConfig) {}\n\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    const combinedOptions = Object.assign({}, this._config, options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n\n  /**\n   * Dismisses all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\n\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   *\n   * @since 3.3.0\n   */\n  hasOpenModals(): boolean { return this._modalStack.hasOpenModals(); }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbModal} from './modal';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nexport {NgbModal} from './modal';\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbNavConfig {\n  destroyOnHide = true;\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  roles: 'tablist' | false = 'tablist';\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectorRef,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport {isDefined} from '../util/util';\nimport {NgbNavConfig} from './nav-config';\n\nconst isValidNavId = (id: any) => isDefined(id) && id !== '';\n\nlet navCounter = 0;\n\n/**\n * Context passed to the nav content template.\n *\n * See [this demo](#/components/nav/examples#keep-content) as the example.\n *\n * @since 5.2.0\n */\nexport interface NgbNavContentContext {\n  /**\n   * If `true`, current nav content is visible and active\n   */\n  $implicit: boolean;\n}\n\n\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\n@Directive({selector: 'ng-template[ngbNavContent]'})\nexport class NgbNavContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\n@Directive({selector: '[ngbNavItem]', exportAs: 'ngbNavItem', host: {'[class.nav-item]': 'true'}})\nexport class NgbNavItem implements AfterContentChecked, OnInit {\n  private _nav: NgbNav;\n\n  /**\n   * If `true`, non-active current nav item content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * If `true`, the current nav item is disabled and can't be toggled by user.\n   *\n   * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n   */\n  @Input() disabled = false;\n\n  /**\n   * The id used for the DOM elements.\n   * Must be unique inside the document in case you have multiple `ngbNav`s on the page.\n   *\n   * Autogenerated as `ngb-nav-XXX` if not provided.\n   */\n  @Input() domId: string;\n\n  /**\n   * The id used as a model for active nav.\n   * It can be anything, but must be unique inside one `ngbNav`.\n   *\n   * The only limitation is that it is not possible to have the `''` (empty string) as id,\n   * because ` ngbNavItem `, `ngbNavItem=''` and `[ngbNavItem]=\"''\"` are indistinguishable\n   */\n  @Input('ngbNavItem') _id: any;\n\n  contentTpl: NgbNavContent | null;\n\n  @ContentChildren(NgbNavContent, {descendants: false}) contentTpls: QueryList<NgbNavContent>;\n\n  constructor(@Inject(forwardRef(() => NgbNav)) nav, public elementRef: ElementRef<any>) {\n    // TODO: cf https://github.com/angular/angular/issues/30106\n    this._nav = nav;\n  }\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.contentTpl = this.contentTpls.first;\n  }\n\n  ngOnInit() {\n    if (!isDefined(this.domId)) {\n      this.domId = `ngb-nav-${navCounter++}`;\n    }\n  }\n\n  get active() { return this._nav.activeId === this.id; }\n\n  get id() { return isValidNavId(this._id) ? this._id : this.domId; }\n\n  get panelDomId() { return `${this.domId}-panel`; }\n\n  isPanelInDom() {\n    return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n  }\n}\n\n\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: '[ngbNav]',\n  exportAs: 'ngbNav',\n  host: {\n    '[class.nav]': 'true',\n    '[class.flex-column]': `orientation === 'vertical'`,\n    '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n    '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n  }\n})\nexport class NgbNav implements AfterContentInit {\n  /**\n   * The id of the nav that should be active\n   *\n   * You could also use the `.select()` method and the `(navChange)` event\n   */\n  @Input() activeId: any;\n\n  /**\n   * The event emitted after the active nav changes\n   * The payload of the event is the newly active nav id\n   *\n   * If you want to prevent nav change, you should use `(navChange)` event\n   */\n  @Output() activeIdChange = new EventEmitter<any>();\n\n  /**\n   * If `true`, non-active nav content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * The orientation of navs.\n   *\n   * Using `vertical` will also add the `aria-orientation` attribute\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Role attribute generating strategy:\n   * - `false` - no role attributes will be generated\n   * - `'tablist'` - 'tablist', 'tab' and 'tabpanel' will be generated (default)\n   */\n  @Input() roles: 'tablist' | false;\n\n  @ContentChildren(NgbNavItem) items: QueryList<NgbNavItem>;\n\n  constructor(@Attribute('role') public role: string, config: NgbNavConfig, private _cd: ChangeDetectorRef) {\n    this.destroyOnHide = config.destroyOnHide;\n    this.orientation = config.orientation;\n    this.roles = config.roles;\n  }\n\n  /**\n   * The nav change event emitted right before the nav change happens on user click.\n   *\n   * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n   *\n   * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n   */\n  @Output() navChange = new EventEmitter<NgbNavChangeEvent>();\n\n  click(item: NgbNavItem) {\n    if (!item.disabled) {\n      this._updateActiveId(item.id);\n    }\n  }\n\n  /**\n   * Selects the nav with the given id and shows its associated pane.\n   * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n   */\n  select(id: any) { this._updateActiveId(id, false); }\n\n  ngAfterContentInit() {\n    if (!isDefined(this.activeId)) {\n      const nextId = this.items.first ? this.items.first.id : null;\n      if (isValidNavId(nextId)) {\n        this._updateActiveId(nextId, false);\n        this._cd.detectChanges();\n      }\n    }\n  }\n\n  private _updateActiveId(nextId: any, emitNavChange = true) {\n    if (this.activeId !== nextId) {\n      let defaultPrevented = false;\n\n      if (emitNavChange) {\n        this.navChange.emit({activeId: this.activeId, nextId, preventDefault: () => { defaultPrevented = true; }});\n      }\n\n      if (!defaultPrevented) {\n        this.activeId = nextId;\n        this.activeIdChange.emit(nextId);\n      }\n    }\n  }\n}\n\n\n/**\n * A directive to put on the nav link.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: 'a[ngbNavLink]',\n  host: {\n    '[id]': 'navItem.domId',\n    '[class.nav-link]': 'true',\n    '[class.nav-item]': 'hasNavItemClass()',\n    '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n    'href': '',\n    '[class.active]': 'navItem.active',\n    '[class.disabled]': 'navItem.disabled',\n    '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n    '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n    '[attr.aria-selected]': 'navItem.active',\n    '[attr.aria-disabled]': 'navItem.disabled',\n    '(click)': 'nav.click(navItem); $event.preventDefault()'\n  }\n})\nexport class NgbNavLink {\n  constructor(@Attribute('role') public role: string, public navItem: NgbNavItem, public nav: NgbNav) {}\n\n  hasNavItemClass() {\n    // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n    return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n  }\n}\n\n\n/**\n * The payload of the change event emitted right before the nav change happens on user click.\n *\n * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n *\n * @since 5.2.0\n */\nexport interface NgbNavChangeEvent {\n  /**\n   * Id of the currently active nav.\n   */\n  activeId: any;\n\n  /**\n   * Id of the newly selected nav.\n   */\n  nextId: any;\n\n  /**\n   * Function that will prevent nav change if called.\n   */\n  preventDefault: () => void;\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbNav} from './nav';\n\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\n@Component({\n  selector: '[ngbNavOutlet]',\n  host: {'[class.tab-content]': 'true'},\n  encapsulation: ViewEncapsulation.None,\n  template: `\n      <ng-template ngFor let-item [ngForOf]=\"nav.items\">\n          <div class=\"tab-pane\"\n               *ngIf=\"item.isPanelInDom()\"\n               [id]=\"item.panelDomId\"\n               [class.active]=\"item.active\"\n               [attr.role]=\"paneRole ? paneRole : nav.roles ? 'tabpanel' : undefined\"\n               [attr.aria-labelledby]=\"item.domId\">\n              <ng-template [ngTemplateOutlet]=\"item.contentTpl?.templateRef\" [ngTemplateOutletContext]=\"{$implicit: item.active}\"></ng-template>\n          </div>\n      </ng-template>\n  `\n})\nexport class NgbNavOutlet {\n  /**\n   * A role to set on the nav pane\n   */\n  @Input() paneRole;\n\n  /**\n   * Reference to the `NgbNav`\n   */\n  @Input('ngbNavOutlet') nav: NgbNav;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbNav, NgbNavContent, NgbNavItem, NgbNavLink} from './nav';\nimport {NgbNavOutlet} from './nav-outlet';\n\nexport {NgbNav, NgbNavContent, NgbNavContentContext, NgbNavItem, NgbNavLink, NgbNavChangeEvent} from './nav';\nexport {NgbNavOutlet} from './nav-outlet';\nexport {NgbNavConfig} from './nav-config';\n\nconst NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];\n\n@NgModule({declarations: NGB_NAV_DIRECTIVES, exports: NGB_NAV_DIRECTIVES, imports: [CommonModule]})\nexport class NgbNavModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  OnChanges,\n  ChangeDetectionStrategy,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A context for the\n * * `NgbPaginationFirst`\n * * `NgbPaginationPrevious`\n * * `NgbPaginationNext`\n * * `NgbPaginationLast`\n * * `NgbPaginationEllipsis`\n *\n * link templates in case you want to override one.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationLinkContext {\n  /**\n   * The currently selected page number\n   */\n  currentPage: number;\n\n  /**\n   * If `true`, the current link is disabled\n   */\n  disabled: boolean;\n}\n\n/**\n * A context for the `NgbPaginationNumber` link template in case you want to override one.\n *\n * Extends `NgbPaginationLinkContext`.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationNumberContext extends NgbPaginationLinkContext {\n  /**\n   * The page number, displayed by the current page link.\n   */\n  $implicit: number;\n}\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationEllipsis]'})\nexport class NgbPaginationEllipsis {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationFirst]'})\nexport class NgbPaginationFirst {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationLast]'})\nexport class NgbPaginationLast {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNext]'})\nexport class NgbPaginationNext {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNumber]'})\nexport class NgbPaginationNumber {\n  constructor(public templateRef: TemplateRef<NgbPaginationNumberContext>) {}\n}\n\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationPrevious]'})\nexport class NgbPaginationPrevious {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\" [attr.aria-current]=\"(pageNumber === page ? 'page' : null)\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                       [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\" [attr.tabindex]=\"disabled ? '-1' : null\"\n          [attr.aria-disabled]=\"disabled ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                       [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  @ContentChild(NgbPaginationEllipsis, {static: false}) tplEllipsis: NgbPaginationEllipsis;\n  @ContentChild(NgbPaginationFirst, {static: false}) tplFirst: NgbPaginationFirst;\n  @ContentChild(NgbPaginationLast, {static: false}) tplLast: NgbPaginationLast;\n  @ContentChild(NgbPaginationNext, {static: false}) tplNext: NgbPaginationNext;\n  @ContentChild(NgbPaginationNumber, {static: false}) tplNumber: NgbPaginationNumber;\n  @ContentChild(NgbPaginationPrevious, {static: false}) tplPrevious: NgbPaginationPrevious;\n\n  /**\n   * If `true`, pagination links will be disabled.\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * If `true`, the \"First\" and \"Last\" page links are shown.\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   * If `true`, the \"Next\" and \"Previous\" page links are shown.\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   * Whether to rotate pages when `maxSize` > number of pages.\n   *\n   * The current page always stays in the middle if `true`.\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  The number of items in your paginated collection.\n   *\n   *  Note, that this is not the number of pages. Page numbers are calculated dynamically based on\n   *  `collectionSize` and `pageSize`. Ex. if you have 100 items in your collection and displaying 20 items per page,\n   *  you'll end up with 5 pages.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  The maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  The current page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Input() page = 1;\n\n  /**\n   *  The number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n   *\n   *  Event payload is the number of the newly selected page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * The pagination display size.\n   *\n   * Bootstrap currently supports small and large sizes.\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  nextDisabled(): boolean { return !this.hasNext() || this.disabled; }\n\n  previousDisabled(): boolean { return !this.hasPrevious() || this.disabled; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        // The first page will always be included. If the displayed range\n        // starts after the third page, then add ellipsis. But if the range\n        // starts on the third page, then add the second page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (start > 2) {\n          this.pages.unshift(-1);\n        } else if (start === 2) {\n          this.pages.unshift(2);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        // The last page will always be included. If the displayed range\n        // ends before the third-last page, then add ellipsis. But if the range\n        // ends on third-last page, then add the second-last page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (end < (this.pageCount - 2)) {\n          this.pages.push(-1);\n        } else if (end === (this.pageCount - 2)) {\n          this.pages.push(this.pageCount - 1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page.\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\n\nexport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\nconst DIRECTIVES = [\n  NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n  NgbPaginationPrevious\n];\n\n@NgModule({declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule]})\nexport class NgbPaginationModule {\n}\n","import {Observable, merge} from 'rxjs';\nimport {share, filter, delay, map} from 'rxjs/operators';\n\nexport class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout'],\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nexport function observeTriggers(renderer: any, nativeElement: any, triggers: Trigger[], isOpenedFn: () => boolean) {\n  return new Observable<boolean>(subscriber => {\n    const listeners = [];\n    const openFn = () => subscriber.next(true);\n    const closeFn = () => subscriber.next(false);\n    const toggleFn = () => subscriber.next(!isOpenedFn());\n\n    triggers.forEach((trigger: Trigger) => {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(\n            renderer.listen(nativeElement, trigger.open, openFn),\n            renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n\n    return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n  });\n}\n\nconst delayOrNoop = <T>(time: number) => time > 0 ? delay<T>(time) : (a: Observable<T>) => a;\n\nexport function triggerDelay(openDelay: number, closeDelay: number, isOpenedFn: () => boolean) {\n  return (input$: Observable<boolean>) => {\n    let pending = null;\n    const filteredInput$ = input$.pipe(\n        map(open => ({open})), filter(event => {\n          const currentlyOpen = isOpenedFn();\n          if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n            pending = event;\n            return true;\n          }\n          if (pending && pending.open !== event.open) {\n            pending = null;\n          }\n          return false;\n        }),\n        share());\n    const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n    const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$)\n        .pipe(\n            filter(event => {\n              if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n              }\n              return false;\n            }),\n            map(event => event.open));\n  };\n}\n\nexport function listenToTriggers(\n    renderer: any, nativeElement: any, triggers: string, isOpenedFn: () => boolean, openFn, closeFn, openDelay = 0,\n    closeDelay = 0) {\n  const parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return () => {};\n  }\n\n  const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n                           .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n                           .subscribe(open => (open ? openFn() : closeFn()));\n\n  return () => subscription.unsubscribe();\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPopoverConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styleUrls: ['./popover.scss']\n})\nexport class NgbPopoverWindow {\n  @Input() title: undefined | string | TemplateRef<any>;\n  @Input() id: string;\n  @Input() popoverClass: string;\n  @Input() context: any;\n\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\n}\n\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n\n  /**\n   * The title of the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() popoverTitle: string | TemplateRef<any>;\n\n  /**\n   * The preferred placement of the popover.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/popover/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   *\n   * Currently only supports `body`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, popover is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n\n  /**\n   * An optional class applied to the popover window element.\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the popover is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter<void>();\n\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter<void>();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-popover');\n      }\n    });\n  }\n\n  /**\n   * Opens the popover.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening popover from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because popover won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the popover from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  close(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({ngbPopover, popoverTitle, disablePopover, popoverClass}: SimpleChanges) {\n    if (popoverClass && this.isOpen()) {\n      this._windowRef.instance.popoverClass = popoverClass.currentValue;\n    }\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {CommonModule} from '@angular/common';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({\n  declarations: [NgbPopover, NgbPopoverWindow],\n  exports: [NgbPopover],\n  imports: [CommonModule],\n  entryComponents: [NgbPopoverWindow]\n})\nexport class NgbPopoverModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  textType: string;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\n      {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n      [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  private _max: number;\n\n  /**\n   * The maximal value to be displayed in the progress bar.\n   *\n   * Should be a positive number. Will default to 100 otherwise.\n   */\n  @Input()\n  set max(max: number) {\n    this._max = !isNumber(max) || max <= 0 ? 100 : max;\n  }\n\n  get max(): number { return this._max; }\n\n  /**\n   * If `true`, the stripes on the progress bar are animated.\n   *\n   * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * If `true`, the progress bars will be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * If `true`, the current percentage will be shown in the `xx%` format.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * Optional text variant type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   *\n   * @since 5.2.0\n   */\n  @Input() textType: string;\n\n  /**\n   * The type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   */\n  @Input() type: string;\n\n  /**\n   * The current value for the progress bar.\n   *\n   * Should be in the `[0, max]` range.\n   */\n  @Input() value = 0;\n\n  /**\n   * The height of the progress bar.\n   *\n   * Accepts any valid CSS height values, ex. `\"2rem\"`\n   */\n  @Input() height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.textType = config.textType;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * The context for the custom star display template defined in the `starTemplate`.\n */\nexport interface StarTemplateContext {\n  /**\n   * The star fill percentage, an integer in the `[0, 100]` range.\n   */\n  fill: number;\n\n  /**\n   * Index of the star, starts with `0`.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'd-inline-flex',\n    '[tabindex]': 'disabled ? -1 : 0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * The maximal rating that can be given.\n   */\n  @Input() max: number;\n\n  /**\n   * The current rating. Could be a decimal value like `3.75`.\n   */\n  @Input() rate: number;\n\n  /**\n   * If `true`, the rating can't be changed.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * The template to override the way each star is displayed.\n   *\n   * Alternatively put an `<ng-template>` as the only child of your `<ngb-rating>` element\n   */\n  @Input() starTemplate: TemplateRef<StarTemplateContext>;\n  @ContentChild(TemplateRef, {static: false}) starTemplateFromContent: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event emitted when the user is hovering over a given rating.\n   *\n   * Event payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user stops hovering over a given rating.\n   *\n   * Event payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user selects a new rating.\n   *\n   * Event payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) {\n    if (!this.readonly && !this.disabled) {\n      this.update(this.resettable && this.rate === value ? 0 : value);\n    }\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n      case Key.ArrowLeft:\n        this.update(this.rate - 1);\n        break;\n      case Key.ArrowUp:\n      case Key.ArrowRight:\n        this.update(this.rate + 1);\n        break;\n      case Key.Home:\n        this.update(0);\n        break;\n      case Key.End:\n        this.update(this.max);\n        break;\n      default:\n        return;\n    }\n\n    // note 'return' in default case\n    event.preventDefault();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return parseInt((diff * 100).toFixed(2), 10);\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  type: 'tabs' | 'pills' = 'tabs';\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet nextId = 0;\n\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n */\n@Directive({selector: 'ng-template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive to wrap content to be displayed in a tab.\n */\n@Directive({selector: 'ng-template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab implements AfterContentChecked {\n  /**\n   * The tab identifier.\n   *\n   * Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id = `ngb-tab-${nextId++}`;\n\n  /**\n   * The tab title.\n   *\n   * Use the [`NgbTabTitle`](#/components/tabset/api#NgbTabTitle) directive for non-string titles.\n   */\n  @Input() title: string;\n\n  /**\n   * If `true`, the current tab is disabled and can't be toggled.\n   */\n  @Input() disabled = false;\n\n  titleTpl: NgbTabTitle | null;\n  contentTpl: NgbTabContent | null;\n\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before the tab change.\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * The id of the currently active tab.\n   */\n  activeId: string;\n\n  /**\n   * The id of the newly selected tab.\n   */\n  nextId: string;\n\n  /**\n   * Calling this function will prevent tab switching.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-selected]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  justifyClass: string;\n\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * The identifier of the tab that should be opened **initially**.\n   *\n   * For subsequent tab switches use the `.select()` method and the `(tabChange)` event.\n   */\n  @Input() activeId: string;\n\n  /**\n   * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * The horizontal alignment of the tabs with flexbox utilities.\n   */\n  @Input()\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\n    if (className === 'fill' || className === 'justified') {\n      this.justifyClass = `nav-${className}`;\n    } else {\n      this.justifyClass = `justify-content-${className}`;\n    }\n  }\n\n  /**\n   * The orientation of the tabset.\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Type of navigation to be used for tabs.\n   *\n   * Currently Bootstrap supports only `\"tabs\"` and `\"pills\"`.\n   *\n   * Since `3.0.0` can also be an arbitrary string (ex. for custom themes).\n   */\n  @Input() type: 'tabs' | 'pills' | string;\n\n  /**\n   * A tab change event emitted right before the tab change happens.\n   *\n   * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n   */\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\n\n  constructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n\n  /**\n   * Selects the tab with the given id and shows its associated content panel.\n   *\n   * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n   * hidden depending on the `destroyOnHide` value.\n   */\n  select(tabId: string) {\n    let selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgbNavModule} from '../nav/nav.module';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle} from './tabset';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule, NgbNavModule]})\nexport class NgbTabsetModule {\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts a user-model time of type `T` to an `NgbTimeStruct` for internal use.\n   */\n  abstract fromModel(value: T): NgbTimeStruct;\n\n  /**\n   * Converts an internal `NgbTimeStruct` time to a user-model time of type `T`.\n   */\n  abstract toModel(time: NgbTimeStruct): T;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayPeriods, TranslationWidth} from '@angular/common';\n\nexport function NGB_TIMEPICKER_I18N_FACTORY(locale) {\n  return new NgbTimepickerI18nDefault(locale);\n}\n\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbTimepickerI18n {\n  /**\n   * Returns the name for the period before midday.\n   */\n  abstract getMorningPeriod(): string;\n\n  /**\n   * Returns the name for the period after midday.\n   */\n  abstract getAfternoonPeriod(): string;\n}\n\n@Injectable()\nexport class NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n  private _periods: [string, string];\n\n  constructor(@Inject(LOCALE_ID) locale: string) {\n    super();\n\n    this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n  }\n\n  getMorningPeriod(): string { return this._periods[0]; }\n\n  getAfternoonPeriod(): string { return this._periods[1]; }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  forwardRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isInteger, isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\nimport {NgbTimepickerI18n} from './timepicker-i18n';\n\nconst FILTER_REGEX = /[^0-9]/g;\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./timepicker.scss'],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\"\n            [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  private _hourStep: number;\n  private _minuteStep: number;\n  private _secondStep: number;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * If `true`, the spinners above and below inputs are visible.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * If `true`, it is possible to select seconds.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n  @Input()\n  set hourStep(step: number) {\n    this._hourStep = isInteger(step) ? step : this._config.hourStep;\n  }\n\n  get hourStep(): number { return this._hourStep; }\n\n  /**\n   * The number of minutes to add/subtract when clicking minute spinners.\n   */\n  @Input()\n  set minuteStep(step: number) {\n    this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n  }\n\n  get minuteStep(): number { return this._minuteStep; }\n\n  /**\n   * The number of seconds to add/subtract when clicking second spinners.\n   */\n  @Input()\n  set secondStep(step: number) {\n    this._secondStep = isInteger(step) ? step : this._config.secondStep;\n  }\n\n  get secondStep(): number { return this._secondStep; }\n\n  /**\n   * If `true`, the timepicker is readonly and can't be changed.\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * The size of inputs and buttons.\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(\n      private readonly _config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>,\n      private _cd: ChangeDetectorRef, public i18n: NgbTimepickerI18n) {\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n    this._cd.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatInput(input: HTMLInputElement) { input.value = input.value.replace(FILTER_REGEX, ''); }\n\n  formatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value: number) { return padNumber(value); }\n\n  get isSmallSize(): boolean { return this.size === 'small'; }\n\n  get isLargeSize(): boolean { return this.size === 'large'; }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\nexport {NgbTimepickerI18n} from './timepicker-i18n';\n\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\nexport class NgbTimepickerModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Interface used to type all toast config options. See `NgbToastConfig`.\n *\n * @since 5.0.0\n */\nexport interface NgbToastOptions {\n  /**\n   * Specify if the toast component should emit the `hide()` output\n   * after a certain `delay` in ms.\n   */\n  autohide?: boolean;\n\n  /**\n   * Delay in ms after which the `hide()` output should be emitted.\n   */\n  delay?: number;\n\n  /**\n   * Type of aria-live attribute to be used.\n   *\n   * Could be one of these 2 values (as string):\n   * - `polite` (default)\n   * - `alert`\n   */\n  ariaLive?: 'polite' | 'alert';\n}\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbToastConfig implements NgbToastOptions {\n  autohide = true;\n  delay = 500;\n  ariaLive: 'polite' | 'alert' = 'polite';\n}\n","import {\n  AfterContentInit,\n  Attribute,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {NgbToastConfig} from './toast-config';\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\n@Directive({selector: '[ngbToastHeader]'})\nexport class NgbToastHeader {\n}\n\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\n@Component({\n  selector: 'ngb-toast',\n  exportAs: 'ngbToast',\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'role': 'alert',\n    '[attr.aria-live]': 'ariaLive',\n    'aria-atomic': 'true',\n    '[class.toast]': 'true',\n    '[class.show]': 'true',\n  },\n  template: `\n    <ng-template #headerTpl>\n      <strong class=\"mr-auto\">{{header}}</strong>\n    </ng-template>\n    <ng-template [ngIf]=\"contentHeaderTpl || header\">\n      <div class=\"toast-header\">\n        <ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.toast.close-aria\" (click)=\"hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    </ng-template>\n    <div class=\"toast-body\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrls: ['./toast.scss']\n})\nexport class NgbToast implements AfterContentInit,\n    OnChanges {\n  private _timeoutID;\n\n  /**\n   * Delay after which the toast will hide (ms).\n   * default: `500` (ms) (inherited from NgbToastConfig)\n   */\n  @Input() delay: number;\n\n  /**\n   * Auto hide the toast after a delay in ms.\n   * default: `true` (inherited from NgbToastConfig)\n   */\n  @Input() autohide: boolean;\n\n  /**\n   * Text to be used as toast's header.\n   * Ignored if a ContentChild template is specified at the same time.\n   */\n  @Input() header: string;\n\n  /**\n   * A template like `<ng-template ngbToastHeader></ng-template>` can be\n   * used in the projected content to allow markup usage.\n   */\n  @ContentChild(NgbToastHeader, {read: TemplateRef, static: true}) contentHeaderTpl: TemplateRef<any>| null = null;\n\n  /**\n   * An event fired immediately when toast's `hide()` method has been called.\n   * It can only occur in 2 different scenarios:\n   * - `autohide` timeout fires\n   * - user clicks on a closing cross (&times)\n   *\n   * Additionally this output is purely informative. The toast won't disappear. It's up to the user to take care of\n   * that.\n   */\n  @Output('hide') hideOutput = new EventEmitter<void>();\n\n  constructor(@Attribute('aria-live') public ariaLive: string, config: NgbToastConfig) {\n    if (this.ariaLive == null) {\n      this.ariaLive = config.ariaLive;\n    }\n    this.delay = config.delay;\n    this.autohide = config.autohide;\n  }\n\n  ngAfterContentInit() { this._init(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('autohide' in changes) {\n      this._clearTimeout();\n      this._init();\n    }\n  }\n\n  hide() {\n    this._clearTimeout();\n    this.hideOutput.emit();\n  }\n\n  private _init() {\n    if (this.autohide && !this._timeoutID) {\n      this._timeoutID = setTimeout(() => this.hide(), this.delay);\n    }\n  }\n\n  private _clearTimeout() {\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {NgbToast, NgbToastHeader} from './toast';\n\nexport {NgbToast, NgbToastHeader} from './toast';\nexport {NgbToastConfig, NgbToastOptions} from './toast-config';\n\n@NgModule({declarations: [NgbToast, NgbToastHeader], imports: [CommonModule], exports: [NgbToast, NgbToastHeader]})\nexport class NgbToastModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTooltipConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'hover focus';\n  container: string;\n  disableTooltip = false;\n  tooltipClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"tooltip show\" + (tooltipClass ? \" \" + tooltipClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styleUrls: ['./tooltip.scss']\n})\nexport class NgbTooltipWindow {\n  @Input() id: string;\n  @Input() tooltipClass: string;\n}\n\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The preferred placement of the tooltip.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, tooltip is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n\n  /**\n   * An optional class applied to the tooltip window element.\n   *\n   * @since 3.2.0\n   */\n  @Input() tooltipClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the tooltip is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-tooltip');\n      }\n    });\n  }\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because tooltip won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the tooltip from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({tooltipClass}: SimpleChanges) {\n    if (tooltipClass && this.isOpen()) {\n      this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styleUrls: ['./highlight.scss']\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  /**\n   * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n   */\n  @Input() highlightClass = 'ngb-highlight';\n\n  /**\n   * The text highlighting is added to.\n   *\n   * If the `term` is found inside this text, it will be highlighted.\n   * If the `term` contains array then all the items from it will be highlighted inside the text.\n   */\n  @Input() result: string;\n\n  /**\n   * The term or array of terms to be highlighted.\n   * Since version `v4.2.0` term could be a `string[]`\n   */\n  @Input() term: string | readonly string[];\n\n  ngOnChanges(changes: SimpleChanges) {\n    const result = toString(this.result);\n\n    const terms = Array.isArray(this.term) ? this.term : [this.term];\n    const escapedTerms = terms.map(term => regExpEscape(toString(term))).filter(term => term);\n\n    this.parts = escapedTerms.length ? result.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewEncapsulation} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * The context for the typeahead result template in case you want to override the default one.\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result item.\n   */\n  result: any;\n\n  /**\n   * Search term from the `<input>` used to get current result.\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  encapsulation: ViewEncapsulation.None,\n  host: {'(mousedown)': '$event.preventDefault()', 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead window. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\n  return 100;\n}\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable({providedIn: 'root'})\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    element.textContent = '';\n    const setText = () => element.textContent = message;\n    if (delay === null) {\n      setText();\n    } else {\n      setTimeout(setText, delay);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ApplicationRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {BehaviorSubject, fromEvent, Observable, Subject, Subscription} from 'rxjs';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nimport {Live} from '../util/accessibility/live';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\nimport {PopupService} from '../util/popup';\nimport {PlacementArray, positionElements} from '../util/positioning';\nimport {isDefined, toString} from '../util/util';\n\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\n\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * An event emitted right before an item is selected from the result list.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * The item from the result list about to be selected.\n   */\n  item: any;\n\n  /**\n   * Calling this function will prevent item selection from happening.\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _closed$ = new Subject();\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n  /**\n   * The value for the `autocomplete` attribute for the `<input>` element.\n   *\n   * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the typeahead popup will be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, model values will not be restricted only to items selected from the popup.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * If `true`, the first item in the result list will always stay focused while typing.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the `<input>` field.\n   *\n   * It is called when the user selects something in the popup or the model value changes, so the input needs to\n   * be updated.\n   */\n  @Input() inputFormatter: (item: any) => string;\n\n  /**\n   * The function that converts a stream of text values from the `<input>` element to the stream of the array of items\n   * to display in the typeahead popup.\n   *\n   * If the resulting observable emits a non-empty array - the popup will be shown. If it emits an empty array - the\n   * popup will be closed.\n   *\n   * See the [basic example](#/components/typeahead/examples#basic) for more details.\n   *\n   * Note that the `this` argument is `undefined` so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<readonly any[]>;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the popup.\n   *\n   * Must be provided, if your `ngbTypeahead` returns something other than `Observable<string[]>`.\n   *\n   * Alternatively for more complex markup in the popup you should use `resultTemplate`.\n   */\n  @Input() resultFormatter: (item: any) => string;\n\n  /**\n   * The template to override the way resulting items are displayed in the popup.\n   *\n   * See the [ResultTemplateContext](#/components/typeahead/api#ResultTemplateContext) for the template context.\n   *\n   * Also see the [template for results demo](#/components/typeahead/examples#template) for more details.\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * If `true`, will show the hint in the `<input>` when an item in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /**\n   * The preferred placement of the typeahead.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted right before an item is selected from the result list.\n   *\n   * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _changeDetector: ChangeDetectorRef, applicationRef: ApplicationRef) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = this.showHint ? value : null;\n      this._onChange(this.editable ? value : undefined);\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => results$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) {\n    this._writeInputValue(this._formatItemForInput(value));\n    if (this.showHint) {\n      this._inputValueBackup = value;\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._resubscribeTypeahead.next(null);\n      this._closePopup();\n      if (this.showHint && this._inputValueBackup !== null) {\n        this._writeInputValue(this._inputValueBackup);\n      }\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n        event.preventDefault();\n        this._windowRef.instance.next();\n        this._showHint();\n        break;\n      case Key.ArrowUp:\n        event.preventDefault();\n        this._windowRef.instance.prev();\n        this._showHint();\n        break;\n      case Key.Enter:\n      case Key.Tab:\n        const result = this._windowRef.instance.getActive();\n        if (isDefined(result)) {\n          event.preventDefault();\n          event.stopPropagation();\n          this._selectResult(result);\n        }\n        this._closePopup();\n        break;\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._changeDetector.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$,\n          [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n    }\n  }\n\n  private _closePopup() {\n    this._closed$.next();\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this._writeInputValue(formattedVal);\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<readonly any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n\n      // live announcer\n      const count = results ? results.length : 0;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead} from './typeahead';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbAccordionModule} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {NgbModalModule} from './modal/modal.module';\nimport {NgbNavModule} from './nav/nav.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbToastModule} from './toast/toast.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule} from './typeahead/typeahead.module';\n\n\n\nexport {\n  NgbAccordion,\n  NgbAccordionConfig,\n  NgbAccordionModule,\n  NgbPanel,\n  NgbPanelChangeEvent,\n  NgbPanelContent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelTitle,\n  NgbPanelToggle\n} from './accordion/accordion.module';\nexport {NgbAlert, NgbAlertConfig, NgbAlertModule} from './alert/alert.module';\nexport {NgbButtonLabel, NgbButtonsModule, NgbCheckBox, NgbRadio, NgbRadioGroup} from './buttons/buttons.module';\nexport {\n  NgbCarousel,\n  NgbCarouselConfig,\n  NgbCarouselModule,\n  NgbSlide,\n  NgbSlideEvent,\n  NgbSlideEventDirection,\n  NgbSlideEventSource\n} from './carousel/carousel.module';\nexport {NgbCollapse, NgbCollapseModule} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbCalendarGregorian,\n  NgbCalendarHebrew,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbCalendarPersian,\n  NgbDate,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDateNativeUTCAdapter,\n  NgbDateParserFormatter,\n  NgbDatepicker,\n  NgbDatepickerConfig,\n  NgbInputDatepickerConfig,\n  NgbDatepickerContent,\n  NgbDatepickerI18n,\n  NgbDatepickerI18nHebrew,\n  NgbDatepickerKeyboardService,\n  NgbDatepickerModule,\n  NgbDatepickerMonth,\n  NgbDatepickerNavigateEvent,\n  NgbDatepickerState,\n  NgbDateStruct,\n  NgbInputDatepicker,\n  NgbPeriod\n} from './datepicker/datepicker.module';\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownConfig,\n  NgbDropdownItem,\n  NgbDropdownMenu,\n  NgbDropdownModule,\n  NgbDropdownToggle,\n  NgbNavbar\n} from './dropdown/dropdown.module';\nexport {\n  ModalDismissReasons,\n  NgbActiveModal,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalModule,\n  NgbModalOptions,\n  NgbModalRef\n} from './modal/modal.module';\nexport {\n  NgbNavChangeEvent,\n  NgbNavConfig,\n  NgbNav,\n  NgbNavContent,\n  NgbNavContentContext,\n  NgbNavItem,\n  NgbNavLink,\n  NgbNavModule,\n  NgbNavOutlet\n} from './nav/nav.module';\nexport {\n  NgbPagination,\n  NgbPaginationConfig,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationModule,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination/pagination.module';\nexport {NgbPopover, NgbPopoverConfig, NgbPopoverModule} from './popover/popover.module';\nexport {NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule} from './progressbar/progressbar.module';\nexport {NgbRating, NgbRatingConfig, NgbRatingModule} from './rating/rating.module';\nexport {\n  NgbTab,\n  NgbTabChangeEvent,\n  NgbTabContent,\n  NgbTabset,\n  NgbTabsetConfig,\n  NgbTabsetModule,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {\n  NgbTimeAdapter,\n  NgbTimepickerI18n,\n  NgbTimepicker,\n  NgbTimepickerConfig,\n  NgbTimepickerModule,\n  NgbTimeStruct\n} from './timepicker/timepicker.module';\nexport {NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule} from './toast/toast.module';\nexport {NgbTooltip, NgbTooltipConfig, NgbTooltipModule} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeahead,\n  NgbTypeaheadConfig,\n  NgbTypeaheadModule,\n  NgbTypeaheadSelectItemEvent\n} from './typeahead/typeahead.module';\nexport {Placement} from './util/positioning';\n\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule,\n  NgbRatingModule, NgbTabsetModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule\n];\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n}\n"]}